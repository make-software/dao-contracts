var searchIndex = JSON.parse('{\
"casper_dao_contracts":{"doc":"A selection of contracts implemented for usage in DAO.","tn":["admin","admin_contract","bid_escrow","bid_escrow_contract","config","cspr_rate_provider_contract","dao_ids_contract","ids","kyc_nft","kyc_nft_contract","kyc_voter","kyc_voter_contract","onboarding_request","onboarding_request_contract","rate_provider","repo_voter","repo_voter_contract","reputation","reputation_contract","reputation_voter","reputation_voter_contract","rules","simple_voter","simple_voter_contract","slashing_voter","slashing_voter_contract","va_nft","va_nft_contract","variable_repository","variable_repository_contract","voting","Action","AddToWhitelist","AdminContract","AdminContractCaller","AdminContractInterface","AdminContractTest","AdminVotingCreated","ChangeOwner","RemoveFromWhitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","cl_type","contract_def","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","eq","equivalent","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","serialized_length","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","vzip","BidEngine","BidEscrowContract","BidEscrowContractCaller","BidEscrowContractInterface","BidEscrowContractTest","JobEngine","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","bid","bids_count","bids_count","bids_count","bids_count","bids_count","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_all_bids","cancel_bid","cancel_bid","cancel_bid","cancel_bid","cancel_bid","cancel_job","cancel_job","cancel_job","cancel_job","cancel_job","cancel_job_offer","cancel_job_offer","cancel_job_offer","cancel_job_offer","cancel_job_offer","cancel_voter","cancel_voter","cancel_voter","cancel_voter","change_ownership","change_ownership","change_ownership","change_ownership","clear_active_job_offers_ids","contract_def","entry_points","event","events","events_count","finish_voting","finish_voting","finish_voting","finish_voting","finish_voting","from","from","from","from","from","get_ballot","get_ballot","get_ballot","get_ballot","get_bid","get_bid","get_bid","get_bid","get_bid","get_bid_or_revert","get_cspr_balance","get_cspr_balance","get_cspr_balance","get_cspr_balance","get_env","get_job","get_job","get_job","get_job","get_job","get_job_offer","get_job_offer","get_job_offer","get_job_offer","get_job_offer","get_job_offer_configuration","get_job_offer_or_revert","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","instance","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","job","job_offer","job_offers_count","job_offers_count","job_offers_count","job_offers_count","job_offers_count","jobs_count","jobs_count","jobs_count","jobs_count","jobs_count","new","next_bid_id","pick_bid","pick_bid","pick_bid","pick_bid","pick_bid","pick_bid_with_cspr_amount","post_job_offer","post_job_offer","post_job_offer","post_job_offer","post_job_offer","post_job_offer_with_cspr_amount","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","return_job_offer_poster_dos_fee","slash_all_active_job_offers","slash_all_active_job_offers","slash_all_active_job_offers","slash_all_active_job_offers","slash_bid","slash_bid","slash_bid","slash_bid","slash_voter","slash_voter","slash_voter","slash_voter","storage","store_bid","submit_bid","submit_bid","submit_bid","submit_bid","submit_bid","submit_bid_with_cspr_amount","submit_job_proof","submit_job_proof","submit_job_proof","submit_job_proof","submit_job_proof","submit_job_proof_during_grace_period","submit_job_proof_during_grace_period","submit_job_proof_during_grace_period","submit_job_proof_during_grace_period","submit_job_proof_during_grace_period","submit_job_proof_during_grace_period_with_cspr_amount","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","vzip","Bid","BidStatus","CancelBidRequest","Canceled","Created","Picked","ReclaimBidRequest","Reclaimed","Rejected","ShortenedBid","SubmitBidRequest","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auction_state","bid_id","bid_id","bid_id","bid_id","block_time","block_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","caller","cancel","cancel_without_validation","cl_type","cl_type","cl_type","clone","clone","clone","clone_into","clone_into","clone_into","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","cspr_stake","cspr_stake","cspr_stake","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","job_finish_time","job_offer_id","job_offer_id","job_offer_status","job_poster","job_poster","job_status","max_budget","new","new","new_bid_id","new_worker","new_worker_kyced","new_worker_va","onboard","onboard","onboard","picked","proposed_payment","proposed_payment","proposed_timeframe","proposed_timeframe","reclaim","reject_without_validation","reputation_stake","reputation_stake","reputation_stake","reputation_stake","serialized_length","serialized_length","serialized_length","status","timestamp","timestamp","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","va_bid_acceptance_timeout","va_can_bid_on_public_auction","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker","worker","worker_is_va","worker_kyced","BidSubmitted","JobAccepted","JobCancelled","JobCreated","JobDone","JobOfferCreated","JobRejected","JobSubmitted","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","emit","emit","emit","emit","emit","emit","emit","emit","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_def","event_def","event_def","event_def","event_def","event_def","event_def","event_def","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","new","new","new","new","new","new","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Cancelled","Completed","Created","External","ExternalToVA","Internal","Job","JobStatus","PickBidRequest","ReclaimJobRequest","SubmitJobProofRequest","Submitted","WorkerType","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bid_id","bid_id","block_time","block_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","cancel","cl_type","cl_type","cl_type","clone","clone","clone","clone_into","clone_into","clone_into","complete","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","cspr_stake","default","eq","eq","equivalent","external_worker_cspr_stake","external_worker_cspr_stake","finish_time","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","get_stake","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_unbound","is_worker_va","job_id","job_id","job_offer_id","job_offer_id","job_proof","new","new_bid_id","new_job_id","onboard","onboard","payment","payment","poster","poster","proof","proposed_timeframe","reclaim","reputation_stake","result","serialized_length","serialized_length","serialized_length","set_voting_id","stake","status","submit_proof","timeframe","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","transferred_cspr","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_cancel","voting_id","vzip","vzip","vzip","vzip","vzip","vzip","worker","worker","worker","worker_type","AuctionState","CancelJobOfferRequest","Cancelled","Created","InProgress","Internal","JobOffer","JobOfferStatus","None","PostJobOfferRequest","Public","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auction_state","block_time","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","cancel","cl_type","cl_type","configuration","configuration","configuration","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","dos_fee","dos_fee","eq","eq","expected_timeframe","expected_timeframe","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","in_progress","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","job_offer_id","job_offer_id","job_poster","job_poster","job_poster_kyced","max_budget","max_budget","new","serialized_length","serialized_length","start_time","start_time","status","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BidStorage","JobStorage","as_any","as_any","as_any_mut","as_any_mut","bids_count","borrow","borrow","borrow_mut","borrow_mut","clear_active_job_offers_ids","from","from","get_bid","get_bid_or_revert","get_bids_count","get_job","get_job_by_voting_id","get_job_offer","get_job_offer_configuration","get_job_offer_or_revert","get_job_or_revert","get_nth_bid","instance","instance","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","job_offers","job_offers_count","jobs_count","next_bid_id","next_job_id","next_job_offer_id","store_active_job_offer_id","store_bid","store_bid_id","store_job","store_job_for_voting","store_job_offer","try_from","try_from","try_into","try_into","type_id","type_id","update_job_offer","vzip","vzip","BidId","JobId","JobOfferId","Configuration","ConfigurationBuilder","__clone_box","apply_bid_escrow_payment_ratio_to","apply_default_policing_rate_to","apply_default_reputation_slash_to","apply_reputation_conversion_rate_to","as_any","as_any","as_any_mut","as_any_mut","bid_escrow_wallet_address","bind_ballot_for_successful_voting","bind_ballot_for_successful_voting","borrow","borrow","borrow_mut","borrow_mut","build","cl_type","clone","clone_into","contract_call","contract_calls","contract_calls","convert_from_bytes","convert_to_bytes","convert_to_fiat","default_reputation_slash","distribute_payment_to_non_voters","double_time_between_votings","fiat_conversion_rate_address","fiat_rate","fmt","formal_voting_quorum","formal_voting_time","from","from","from_bytes","get_unbound_ballot_address","informal_stake_reputation","informal_voting_quorum","informal_voting_time","internal_auction_time","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_bid_escrow","is_bid_escrow","is_post_job_dos_fee_too_low","new","only_va_can_create","only_va_can_create","public_auction_time","serialized_length","should_bind_ballot_for_successful_voting","should_cast_first_vote","should_double_time_between_votings","time_between_informal_and_formal_voting","to_bytes","to_owned","total_onboarded","try_from","try_from","try_into","try_into","type_id","type_id","va_bid_acceptance_timeout","va_can_bid_on_public_auction","voting_clearness_delta","voting_delay","voting_ids_address","vzip","vzip","DaoIdsContract","DaoIdsContractCaller","DaoIdsContractInterface","DaoIdsContractTest","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","entry_points","event","events_count","from","from","from","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","init","init","init","init","install","instance","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","next_voting_id","next_voting_id","next_voting_id","next_voting_id","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","KycNftContract","KycNftContractCaller","KycNftContractInterface","KycNftContractTest","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","balance_of","balance_of","balance_of","balance_of","base_uri","base_uri","base_uri","base_uri","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn","burn","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","entry_points","event","events_count","from","from","from","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","init","init","init","init","install","instance","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","mint","mint","mint","mint","name","name","name","name","new","owner_of","owner_of","owner_of","owner_of","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","symbol","symbol","symbol","symbol","token_id","token_id","token_id","token_id","token_uri","token_uri","token_uri","token_uri","total_supply","total_supply","total_supply","total_supply","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","KycVoterContract","KycVoterContractCaller","KycVoterContractInterface","KycVoterContractTest","KycVotingCreated","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","from","from","from","from","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","kyc_token_address","kyc_token_address","kyc_token_address","kyc_token_address","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","OnboardingRequestContract","OnboardingRequestContractCaller","OnboardingRequestContractInterface","OnboardingRequestContractTest","OnboardingVotingCreated","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","from","from","from","from","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_cspr_balance","get_cspr_balance","get_cspr_balance","get_cspr_balance","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","request","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","submit_onboarding_request_with_cspr_amount","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","OnboardingRequest","Request","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cl_type","convert_from_bytes","convert_to_bytes","creator","cspr_deposit","cspr_deposit","exists_ongoing_voting","fmt","from","from","from_bytes","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_kyced","is_va","new","reason","reason","rep_stake","rep_stake","requestor","serialized_length","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Onboarding","as_any","as_any_mut","borrow","borrow_mut","finish_voting","from","get_request","instance","into","into_any","into_any_arc","into_any_rc","submit_request","try_from","try_into","type_id","vote","vzip","CSPRRateProviderContract","CSPRRateProviderContractCaller","CSPRRateProviderContractInterface","CSPRRateProviderContractTest","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contract_def","entry_points","event","events_count","from","from","from","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_rate","get_rate","get_rate","get_rate","init","init","init","init","install","instance","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","set_rate","set_rate","set_rate","set_rate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RepoVoterContract","RepoVoterContractCaller","RepoVoterContractInterface","RepoVoterContractTest","RepoVotingCreated","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","from","from","from","from","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","Burn","Mint","ReputationContract","ReputationContractCaller","ReputationContractInterface","ReputationContractTest","access_control","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","address","address","advance_block_time_by","aggregates","all_balances","all_balances","all_balances","all_balances","amount","amount","as_account","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","balance_of","balance_of","balance_of","balance_of","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk_mint_burn","bulk_mint_burn","bulk_mint_burn","bulk_mint_burn","bulk_unstake_bid","bulk_unstake_bid","bulk_unstake_bid","bulk_unstake_bid","bulk_unstake_voting","bulk_unstake_voting","bulk_unstake_voting","bulk_unstake_voting","burn","burn","burn","burn","burn_all","burn_all","burn_all","burn_all","burn_passive","burn_passive","burn_passive","burn_passive","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","emit","emit","entry_points","eq","eq","equivalent","equivalent","event","event_def","event_def","events_count","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_stake","get_stake","get_stake","get_stake","init","init","init","init","install","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","mint","mint","mint","mint","mint_passive","mint_passive","mint_passive","mint_passive","new","partial_balances","partial_balances","partial_balances","partial_balances","passive_balance_of","passive_balance_of","passive_balance_of","passive_balance_of","passive_reputation_storage","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_storage","serialized_length","serialized_length","stake_bid","stake_bid","stake_bid","stake_bid","stake_voting","stake_voting","stake_voting","stake_voting","stakes_info","stakes_info","stakes_info","stakes_info","stakes_storage","submodules","to_bytes","to_bytes","total_supply","total_supply","total_supply","total_supply","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unstake_bid","unstake_bid","unstake_bid","unstake_bid","unstake_voting","unstake_voting","unstake_voting","unstake_voting","vzip","vzip","vzip","vzip","vzip","AggregatedBalance","AggregatedStake","BalanceAggregates","BalanceStorage","StakesStorage","all_balances","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","balance_of","balances","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk_mint_burn","bulk_unstake_bid","bulk_unstake_voting","burn","burn_all","cl_type","cl_type","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","default","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","get_bids","get_bids_stakes_origins","get_stake","get_voting_stakes_origins","get_votings","holders","instance","instance","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mint","new","new","partial_balances","serialized_length","serialized_length","stake_bid","stake_voting","stakes_info","to_bytes","to_bytes","total_supply","total_supply","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unstake_bid","unstake_voting","vzip","vzip","vzip","vzip","vzip","Action","Burn","Mint","ReputationVoterContract","ReputationVoterContractCaller","ReputationVoterContractInterface","ReputationVoterContractTest","ReputationVoting","ReputationVotingCreated","__clone_box","__clone_box","account","action","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","amount","as_account","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","cl_type","cl_type","clone","clone","clone_into","clone_into","contract_def","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","document_hash","emit","entry_points","entrypoint","eq","eq","eq","equivalent","equivalent","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","runtime_args","serialized_length","serialized_length","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","vzip","vzip","Rules","RulesBuilder","add_validation","add_voting_validation","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","default","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","new","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate_generic_validations","validate_voting_validations","validation","vzip","vzip","IsUserKyced","Validation","VotingValidation","as_any","as_any_mut","bid_escrow","borrow","borrow_mut","create","from","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","validate","validate","validate","voting","vzip","CanBeOnboarded","CanBidBeCancelled","CanBidOnAuctionState","CanBidOnOwnJob","CanJobOfferBeCancelled","CanPickBid","CanProgressJobOffer","DoesProposedPaymentExceedBudget","DoesProposedPaymentMatchTransferred","ExistsOngoingVoting","HasPermissionsToCancelBid","HasPermissionsToCancelJobOffer","IsDosFeeEnough","IsGracePeriod","IsNotVa","IsStakeNonZero","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canceller","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","create","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","job_offer_poster","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AfterFormalVoting","CanCreateVoting","VoteInTime","VotingNotCompleted","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create","create","create","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate","validate","validate","vzip","vzip","vzip","vzip","SimpleVoterContract","SimpleVoterContractCaller","SimpleVoterContractInterface","SimpleVoterContractTest","SimpleVotingCreated","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","from","from","from","from","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_document_hash","get_document_hash","get_document_hash","get_document_hash","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","SlashingVoterContract","SlashingVoterContractCaller","SlashingVoterContractInterface","SlashingVoterContractTest","SlashingVotingCreated","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","convert_from_bytes","convert_to_bytes","create_voting","create_voting","create_voting","create_voting","emit","entry_points","eq","equivalent","event","event_def","events_count","finish_voting","finish_voting","finish_voting","finish_voting","fmt","from","from","from","from","from_bytes","get_ballot","get_ballot","get_ballot","get_ballot","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","get_voter","get_voter","get_voter","get_voter","get_voting","get_voting","get_voting","get_voting","init","init","init","init","install","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","new","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","reputation_token_address","reputation_token_address","reputation_token_address","reputation_token_address","serialized_length","slash_voter","slash_voter","slash_voter","slash_voter","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_bid_escrow_list","update_bid_escrow_list","update_bid_escrow_list","update_bid_escrow_list","variable_repository_address","variable_repository_address","variable_repository_address","variable_repository_address","vote","vote","vote","vote","voting_exists","voting_exists","voting_exists","voting_exists","vzip","vzip","vzip","vzip","VaNftContract","VaNftContractCaller","VaNftContractInterface","VaNftContractTest","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","as_account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","balance_of","balance_of","balance_of","balance_of","base_uri","base_uri","base_uri","base_uri","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn","burn","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","entry_points","event","events_count","from","from","from","get_env","get_owner","get_owner","get_owner","get_owner","get_package_hash","init","init","init","init","install","instance","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","mint","mint","mint","mint","name","name","name","name","new","owner_of","owner_of","owner_of","owner_of","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","symbol","symbol","symbol","symbol","token_id","token_id","token_id","token_id","token_uri","token_uri","token_uri","token_uri","total_supply","total_supply","total_supply","total_supply","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","VariableRepositoryContract","VariableRepositoryContractCaller","VariableRepositoryContractInterface","VariableRepositoryContractTest","access_control","add_to_whitelist","add_to_whitelist","add_to_whitelist","add_to_whitelist","address","advance_block_time_by","all_variables","all_variables","all_variables","all_variables","as_account","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_nth_account","assert_event_at","assert_last_event","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","change_ownership","change_ownership","contract_def","entry_points","event","events_count","from","from","from","get","get","get","get","get_env","get_full_value","get_full_value","get_full_value","get_full_value","get_key_at","get_key_at","get_key_at","get_key_at","get_owner","get_owner","get_owner","get_owner","get_package_hash","init","init","init","init","install","instance","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","is_whitelisted","is_whitelisted","keys_count","keys_count","keys_count","keys_count","new","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","remove_from_whitelist","repository","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_at","update_at","update_at","update_at","vzip","vzip","vzip","Against","Ballot","Choice","InFavor","ShortenedBallot","VotingEngine","VotingId","__clone_box","__clone_box","__clone_box","all_voters","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canceled","cast_ballot","choice","cl_type","cl_type","cl_type","clone","clone","clone","clone_into","clone_into","clone_into","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","create_voting","eq","equivalent","events","finish_voting","finish_voting_without_token_redistribution","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","get_ballot","get_ballot_at","get_voter","get_voting","get_voting_or_revert","instance","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_against","is_in_favor","new","redistribute_cspr_to_all_vas","redistribute_to_governance","refs","serialized_length","serialized_length","serialized_length","set_voting","slash_voter","stake","stake","submodules","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unbound","unstake_all_reputation","vote","voter","voter","voters","voters_count","voting_exists","voting_id","voting_state_machine","voting_type","vzip","vzip","vzip","vzip","BallotCanceled","BallotCast","FormalFinished","FormalLost","FormalWon","InformalFinished","Reason","VotingCanceled","VotingCreatedInfo","VotingEnded","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burns","choice","choice","cl_type","cl_type","clone","clone_into","cmp","config_double_time_between_votings","config_formal_quorum","config_formal_voting_time","config_informal_quorum","config_informal_voting_time","config_time_between_informal_and_formal_voting","config_total_onboarded","config_voting_clearness_delta","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","creator","emit","emit","emit","emit","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_def","event_def","event_def","event_def","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mints","new","new","new","new","new","partial_cmp","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","stake","stake","stake","stake_against","stake_in_favor","stakes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unbound_stake_against","unbound_stake_in_favor","unstakes","unstakes","voter","voter","votes_against","votes_in_favor","voting_id","voting_id","voting_id","voting_id","voting_id","voting_result","voting_type","voting_type","voting_type","voting_type","vzip","vzip","vzip","vzip","vzip","vzip","ContractRefs","ContractRefsStorage","ContractRefsWithKycStorage","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","from","from","init","init","instance","instance","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","kyc_token","kyc_token_address","reputation_token","reputation_token","reputation_token","reputation_token_address","reputation_token_address","try_from","try_from","try_into","try_into","type_id","type_id","va_token","va_token","va_token","variable_repository","variable_repository","variable_repository","variable_repository_address","variable_repository_address","vzip","vzip","KycInfo","OnboardingInfo","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear_voting","exists_ongoing_voting","from","from","get_voting_subject","instance","instance","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_kycd","is_onboarded","owner_of","set_voting","token_id_of","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AfterFormal","Against","BeforeInformal","BetweenVotings","BetweenVotings","Canceled","Canceled","Created","Finished","Formal","Formal","Formal","InFavor","Informal","Informal","Informal","QuorumNotReached","Stats","VotingResult","VotingState","VotingStateInTime","VotingStateMachine","VotingSummary","VotingType","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_stake","add_unbound_stake","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind_stake","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cl_type","cl_type","cl_type","cl_type","cl_type","cl_type","cl_type","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete_informal_voting","completed","contract_calls","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","creator","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","formal_stats","formal_voting_end_time","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_result","get_winning_stake","guard_finish_formal_voting","guard_vote","hash","informal_stats","informal_voting_end_time","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_formal","is_in_favor","is_in_time","is_informal_without_stake","is_voting_process_finished","new","new","remove_stake","remove_unbound_stake","result","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","serialized_length","stake_against","stake_against","stake_in_favor","stake_in_favor","state","state_in_time","time_between_votings_end_time","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_bound_stake","total_stake","total_unbound_stake","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbound_stake_against","unbound_stake_in_favor","votes_against","votes_in_favor","voting_configuration","voting_id","voting_type","voting_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["casper_dao_contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::admincasper_dao_contracts::bid_escrowcasper_dao_contracts::bid_escrow::bidcasper_dao_contracts::bid_escrow::eventscasper_dao_contracts::bid_escrow::job","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::bid_escrow::job_offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::bid_escrow::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::bid_escrow::types","","","casper_dao_contracts::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::ids","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::kyc_nft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::kyc_voter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::onboarding_request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::onboarding_request::request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::onboarding_request::voting","","","","","","","","","","","","","","","","","","","casper_dao_contracts::rate_provider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::repo_voter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::reputationcasper_dao_contracts::reputation::submodules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::reputation_votercasper_dao_contracts::rules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::rules::validation","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::rules::validation::bid_escrowcasper_dao_contracts::rules::validation::voting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::simple_voter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::slashing_voter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::va_nft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::variable_repository","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::voting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::voting::eventscasper_dao_contracts::voting::refs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::voting::submodules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_contracts::voting::voting_state_machined":["Contains Admin Contract definition and related …","Generates a  AdminContract binary with all the required …","Contains Bid Escrow Contract definition and related …","Generates a  BidEscrowContract binary with all the …","System configuration.","Generates a  CSPRRateProviderContract binary with all the …","Generates a  DaoIdsContract binary with all the required …","Contains Dao Ids Contract definition and related …","Contains KYC NFT Contract definition and related …","Generates a  KycNftContract binary with all the required …","Contains KYC Voter Contract definition and related …","Generates a  KycVoterContract binary with all the required …","Contains Onboarding Request Contract definition and …","Generates a  OnboardingRequestContract binary with all the …","Contains CSPR Rate Provider Contract definition and …","Contains Repo Voter Contract definition and related …","Generates a  RepoVoterContract binary with all the …","Contains Reputation Token Contract definition and related …","Generates a  ReputationContract binary with all the …","Contains Reputation Voter Contract definition and related …","Generates a  ReputationVoterContract binary with all the …","Abstractions facilitating error handling.","Contains Simple Voter Contract definition and related …","Generates a  SimpleVoterContract binary with all the …","Contains Slashing Voter Contract definition and related …","Generates a  SlashingVoterContract binary with all the …","Contains VA NFT Contract definition and related …","Generates a  VaNftContract binary with all the required …","Contains Variable Repository Contract definition and …","Generates a  VariableRepositoryContract binary with all …","Voting utilities.","Enum for actions that AdminContract can perform","","Admin contract uses VotingEngine to vote on changes of …","Provides a reference to a deployed  Admin Contract .","Defines the  Admin Contract contract’s public interface.","A wrapper around <code>AdminContract</code> to simplify testing. …","Event emitted once voting is created.","","","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","","","","Creates a new admin voting.","","","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the Voter’s <code>Ballot</code>.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","","Manages the Bidding process.","A contract that manages the full <code>Bid Escrow</code> process. Uses …","Provides a reference to a deployed  Bid Escrow Contract .","Defines the  Bid Escrow Contract contract’s public …","A wrapper around <code>BidEscrowContract</code> to simplify testing. …","Manages Jobs lifecycle.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","Bid-related structs.","Returns the total number of bids.","Gets the total number of Bids.","","","","","","","","","","","","","","","Worker cancels a Bid for a Job.","","","","","Terminates the Voting process and slashes the <code>Worker</code>. …","Terminates the Voting process and slashes the <code>Worker</code>.","","","","Invalidates the <code>Job Offer</code>, returns <code>DOS Fee</code> to the …","Invalidates the <code>Job Offer</code>, returns <code>DOS Fee</code> to the …","","","","Erases the voter from voting with the given id. Read more.","","","","Changes the ownership of the contract. Transfers ownership …","","","","Removes all active job offer ids of the Bidder form the …","","","","BidEscrow-related events.","","Finishes voting. Depending on type of voting, different …","Ends the current voting phase and redistributes funds.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the Voter’s <code>Ballot</code>.","","","","Returns a Bid with given BidId.","Gets the Bid with a given id or <code>None</code>.","","","","Gets the Bid with a given id or reverts with BidNotFound.","Returns the CSPR balance of the contract.","","","","","Returns a job with given JobId.","Gets the job with a given id or <code>None</code>.","","","","Returns a JobOffer with given JobOfferId.","Gets the JobOffer with a given id or <code>None</code>.","","","","Gets the Configuration of the Job.","Gets the JobOffer with a given id or reverts with …","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Bid-related structs.","JobOffer-related structs.","Returns the total number of job offers.","Gets the total number of JobOffers.","","","","Returns the total number of jobs.","Returns the total number of jobs.","","","","","Increments bid counter.","Job poster picks a bid. This creates a new Job object and …","","","","","","Job Poster post a new Job Offer.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","Invalidates all the active JobOffers, returns <code>DOS Fee</code>s to …","","","","Updates the Bid status and returns locked reputation to …","","","","Erases the voter from the given voting. <code>Read more</code>.","","","","Submodules storing Job and Bid data.","Writes the Bid to the storage.","Worker submits a Bid for a Job.","","","","","","Submits a job proof. This is called by a <code>Worker</code> or any KYC…","Validates the correctness of proof submission. If the …","","","","Updates the old <code>Bid</code> and <code>Job</code>, the job is assigned to a new …","Updates the old Bid and Job, the job is assigned to a new …","","","","","","","","","","","","","","","","","","","","Bid Escrow simple types.","Returns the address of Variable Repository contract.","","","","Casts a vote over a job.","Records vote in Voting.","","","","Checks if voting of a given type and id exists.","","","","","","","","","Serializable representation of a <code>Bid</code>.","Bid status representation","Data required to cancel a bid.","Cancel due eg. the <code>Job Poster</code> was slashed.","Placed, awaiting to be picked.","Chosen by the <code>Job Poster</code>.","Data required to reclaim a bid during Grace Period.","The bid was taken over during Grace Period.","The Bid was not chosen by the <code>Job Poster</code>.","Serializable shortened representation of a <code>Bid</code>.","Data required to create a Bid.","","","","","","","","","","","","","","","","Auction state","Gets the bid id.","New bid id.","Bid id.","","Block time","Reclaim creation time.","","","","","","","","","","","","","Address who tries to cancel the Bid.","The <code>Address</code> that reclaims the Bid.","Conditionally changes the status to Canceled.","Unconditionally changes the status to Canceled.","","","","","","","","","","","","","","","","Bid CSPR stake - for an External Worker.","Bid CSPR stake - for an External Worker.","Bid CSPR stake - for an External Worker.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The related <code>Job</code> finish time.","Id of the offer the new bid refers to.","Related JobOffer id","The current JobOffer status","JobPoster address.","The related Job creator.","The current status of reclaimed Bid.","The Job max budget","Conditionally creates a new instance of Bid.","Creates a new instance of ShortenedBid.","New bid id.","New Worker address.","If the <code>Worker</code> passed the KYC process.","If the <code>Worker</code> is a VA.","Should be onborded when the Job is done.","Should be onborded when the Job is done.","Should be onborded when the Job is done.","Conditionally changes the status to Picked.","Proposed payment for completing the Job.","Proposed payment for the Job.","Time to complete the Job.","Proposed Job completion time.","Conditionally changes the status to Reclaimed, creates a …","Unconditionally changes the status to Rejected.","Bid reputation stake.","Bid reputation stake.","Bid reputation stake.","","","","","Bid Status","Submission creation time.","Creation time.","","","","","","","","","","","","","","","","","","","","","","","","","Indicates if is too late to cancel the Bid.","Is allowed a VA bid on public auction (not an External …","","","","","","","Worker address.","Worker address.","","If the <code>Worker</code> is a VA.","If the <code>Worker</code> passed the KYC process.","Informs a new Bid has been placed.","Informs a new Job has been accepted by the <code>Job Poster</code>.","Informs the Job has been canceled.","Informs a new Job has been created.","Informs <code>Voting</code> on the Job passed.","Informs a new Job Offer has been created.","Informs <code>Voting</code> on the Job failed.","Informs the Job proof has been submitted by the <code>Worker</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new event.","Creates a new event.","Creates a new event.","Creates a new event.","Creates a new event.","Creates a new event.","Creates a new event.","Creates a new event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Job","Non-VA who does not want to become a VA.","Non-VA who becomes a VA once the Job is accepted.","VA","Serializable representation of a <code>Job</code>.","Serializable Job status.","Data required to pick the Bid.","Data required to reclaim the Job.","Data required to submit job proof.","Job proof submitted.","Serializable Worker type.","","","","","","","","","","","","","","","","Gets the job’s bid id.","Picked Bid id.","Time the bid is picked.","Reclaim time.","","","","","","","","","","","","","The request creator.","Changes status to the Cancelled","","","","","","","","","","Changes status to the Completed","","","","","","","Bid CSPR stake - for an External Worker.","","","","","Gets the job’s CSPR stake.","Bid CSPR stake - for an External Worker.","Gets the job’s finish time.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets the job’s stake.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","If the worker’s vote should be unbound - basically is …","If the <code>Worker</code> is a <code>VA</code>.","Gets the job’s CSPR stake.","Job id.","Gets the job’s offer id.","Related <code>JobOffer</code> id.","Gets confirmation the job has been done.","Conditionally creates a new instance of Job.","Bid id to updated.","Job id to update.","Should be onborded when the Job is done.","Should be onborded when the Job is done.","Gets the job’s payment amount.","Job reward.","Gets the job’s poster.    ","JobPoster address.","","Time to complete the Job.","Changes the status to Completed, creates a new job with a …","Bid reputation stake.","Gets the job’s result.","","","","Links job with Voting.","Bid reputation stake.","Gets the job’s status.","Sets a proof and updates the state to <code>Submitted</code>.","Time to complete the Job.","","","","","","","The amount transferred by <code>Job Poster</code>.","","","","","","","","","","","","","","","","","","","Verifies if the job can be canceled at a given time.","Gets the job’s voting id.","","","","","","","Gets the job’s worker.","Worker address.","Worker address.","Gets the job’s worker type.","Auction state representation.","Data required to cancel a job offer.","Offer canceled, is no longer valid.","Created, Bidders can place bids.","Bid selected, a Worker works on it.","Internal Auction - only VAs’ can bid.","Writeable/readable representation of a <code>Job Offer</code>.","Serializable JobOffer status representation.","Unknown state.","Data required to post a job offer.","Public Auction - nonVAs’ can bid.","","","","","","","","","","","Gets the auction state in a given time.","The request creation time.","","","","","","","","","","","The request caller.","Conditionally changes the status to Cancelled.","","","Gets a reference to the job configuration.","Job configuration.","Job configuration.","","","","","CSPR amount attached to Post Job query.","CSPR amount attached to the offer.","","","The time the Job should be completed.","The time the Job should be completed.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Conditionally changes the status to InProgress.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","New offer id.","Offer id.","The offer creator.","The offer creator.","Is the creator passed the KYC process.","Max amount the Job Poster can pay for the Job.","Max amount the Job Poster can pay for the Job.","Conditionally creates a new instance of JobOffer.","","","The time since the offer is available for Bidders.","The time since the offer is available for Bidders.","The current job offer status.","","","","","","","","","","","","","","","","","","","","","","","Stores Bid-related variables and mappings.","Stores Job-related variables and mappings.","","","","","Gets the total number of Bids.","","","","","Removes from the storage all the active job offer ids of …","Returns the argument unchanged.","Returns the argument unchanged.","Gets the Bid with a given id or <code>None</code>.","Gets the Bid with a given id or reverts with …","Gets the total number of JobOffers.","Gets the Job with a given id or <code>None</code>.","Gets the Job matching to a given id or reverts with …","Gets the total number of JobOffers.","Gets the Configuration of the Job.","Gets the JobOffer with a given id or reverts with …","Gets the Job with a given id or reverts with …","Gets the nth Bid for the JobOffer with a given id or …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Gets the total number of JobOffers.","Gets the current value of jobs counter.","Increments bid counter.","Increments jobs counter.","Increments job offers counter.","Filters active job offer ids, remaining only the given …","Writes the Bid to the storage.","Writes a pair JobOfferId-BidId to the storage.","Writes a Job to the storage.","Links voting with a job.","Writes an job offer to the storage.","","","","","","","Updates the value under the <code>offer_if</code> key.","","","A unique bid id.","A unique job id.","A unique job offer id.","Represents the current system configuration.","Utility to crate a Configuration instance.","","Applies the value of <code>BidEscrowPaymentRatio</code> variable to a …","Applies the value of <code>DefaultPolicingRate</code> variable to a …","Applies the value of <code>DefaultReputationSlash</code> variable to a …","Applies the value of <code>ReputationConversionRate</code> variable to …","","","","","Gets the address of a multisig wallet of the DAO.","Sets the <code>unbound_ballot_address</code> field.","Sets the flag <code>bind_ballot_for_successful_voting</code> and the …","","","","","Builds the final Configuration.","","","","Sets the <code>contract_calls</code> field with a vec with a single …","Sets the <code>contract_calls</code> field.","Returns a vec of calls to be performed once voting is …","","","Calculates the value CSPRs in Fiat currency.","Gets the default reputation slash ratio.","Indicates if the payment for the job should be distributed …","Sets the flag <code>double_time_between_votings</code>. See …","Gets the address of the contract holding the current fiat …","Gets the current CSPR:Fiat rate.","","Gets formal voting quorum.","Gets formal voting time.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets the address of the user who cast an unbound ballot.","Gets formal voting time.","Gets informal voting quorum.","Gets informal voting time.","Gets the time of an internal auction.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sets the <code>is_bid_escrow</code> field and inits the fiat rate.","Indicates if the voting is an instance of BidEscrow.","Indicates if the attached DOS Fee is too low.","Creates a new instance of ConfigurationBuilder.","Sets the <code>only_va_can_create</code> field.","Indicates only a VA can create voting.","Gets the time of a public auction.","","Indicates if the creator ballot should be bounded at the …","Indicates if the stake of the voting creator should be …","Indicates if the time between informal and formal voting …","Gets the time between informal and formal voting.","","","Returns the number of onboarded users (VA’s).","","","","","","","Gets the bid acceptance timeout.","Indicates if a VA can bid on a public auction.","Gets the voting clearness delta.","Gets the time between voting creation and the actual …","Returns the address of the voting id generator contract.","","","Dao Ids contract manages voting ids in the system. Only a …","Provides a reference to a deployed  Dao Ids Contract .","Defines the  Dao Ids Contract contract’s public …","A wrapper around <code>DaoIdsContract</code> to simplify testing. …","Adds a new address to the whitelist.","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","Changes the ownership of the contract. Transfers the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the address of the current owner.","","","","","Initializes a contract. Sets the deployer as the owner.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","Returns the next voting id in the system.","","","","Remove address from the whitelist.","","","","","","","","","","","","","","","","Kyc Owned Nft contract acts like an erc-721 token and …","Provides a reference to a deployed  Kyc Nft Contract .","Defines the  Kyc Nft Contract contract’s public …","A wrapper around <code>KycNftContract</code> to simplify testing. …","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","Returns the number of tokens owned by <code>owner</code>.","","","","Returns a URI prefix that is used by all the assets.","","","","","","","","","","Burns a token with the given id. Decrements the balance of …","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the address of the current owner. <code>Read more</code>.","","","","","Contract constructor.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Creates a new token with the next id and transfers it to a …","","","","Returns a descriptive name for a collection of tokens in …","","","","","Returns the address of the owner of the token.","","","","Remove address from the whitelist. <code>Read more</code>","","","","Gets an abbreviated name for tokens in this contract.","","","","Returns the token id for a given <code>address</code>.","","","","Returns a distinct Uniform Resource Identifier (URI) for a …","","","","Returns the total number of tokens.","","","","","","","","","","","","","","","","KycVoterContract","Provides a reference to a deployed  Kyc Voter Contract .","Defines the  Kyc Voter Contract contract’s public …","A wrapper around <code>KycVoterContract</code> to simplify testing. …","Informs kyc voting has been created.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","Creates a new KYC Voting. Once the voting passes a KYC …","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the Voter’s <code>Ballot</code>.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Returns the address of KYC Token contract.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","TODO: docs","Provides a reference to a deployed  Onboarding Request …","Defines the  Onboarding Request Contract contract’s …","A wrapper around <code>OnboardingRequestContract</code> to simplify …","Informs onboarding voting has been created.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","Submits an onboarding request. If the request is valid …","","","","","","","","","","","Finishes voting stage. Depending on stage, the voting can …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the Voter’s <code>Ballot</code>.","","","","Gets the CSPR balance of the contract.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Gets the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","TODO: docs","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","TODO: docs","Checks if voting of a given type and id exists.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","CSPR Rate provider contract allows to read and write the …","Provides a reference to a deployed  Cspr Rate Provider …","Defines the  Cspr Rate Provider Contract contract’s …","A wrapper around <code>CSPRRateProviderContract</code> to simplify …","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the address of the current owner. <code>Read more</code>.","","","","","Gets the current CSPR:Fiat rate.","","","","Contract constructor.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Updates the current CSPR:Fiat rate.","","","","","","","","","","","","","","","","RepoVoterContract","Provides a reference to a deployed  Repo Voter Contract .","Defines the  Repo Voter Contract contract’s public …","A wrapper around <code>RepoVoterContract</code> to simplify testing. …","Informs repo voting has been created.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","Creates new RepoVoter voting.","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the Voter’s <code>Ballot</code>.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","see VotingEngine","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","Informs tokens have been burnt.","Informs tokens have been minted.","Implementation of the Reputation Contract. See …","Provides a reference to a deployed  Reputation Contract .","Defines the  Reputation Contract contract’s public …","A wrapper around <code>ReputationContract</code> to simplify testing. …","","Adds a  new address to the whitelist.","","","","","","","","","Gets balances of all the token holders.","","","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","Returns the current token balance of the given address.","","","","","","","","","","","","","","Redistributes the reputation based on the voting summary","","","","Unstakes the reputation used as bid value.","","","","Unstakes the reputation used as voting power.","","","","Burns existing tokens. Removes <code>amount</code> of existing tokens …","","","","Burns all the tokens of the <code>owner</code>.","","","","Decreases the balance of the passive reputation of the …","","","","Changes ownership of the contract. Transfer the ownership …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the address of the current owner.","","","","","Returns the total stake of the given account.","","","","Constructor method.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Mints new tokens. Adds <code>amount</code> of new tokens to the balance …","","","","Increases the balance of the passive reputation of the …","","","","","Gets balances of the given account addresses.","","","","Returns the current passive balance of the given address.","","","","","Removes address from the whitelist.","","","","","","","Stakes the reputation used as bid value.","","","","Stakes the reputation used as voting power.","","","","Returns all the data about the given user stakes.","","","","","Building blocks of Reputation Token.","","","Returns the total token supply.","","","","","","","","","","","","","","","","","","","Unstakes the reputation used as bid value.","","","","","","","","","","","","","Stores information about balances and the total supply.","Stores information about the user’s voting and bids.","A module that provides aggregated data about reputation …","A module that stores information about the users’ token …","A module that stores information about stakes.","Gets balances of all the token holders.","","","","","","","","","","","Returns the current balance of the given account address.","","","","","","","","","","","","Performs mint and/or burn for multiple accounts at once. …","Arguments","Decreases all the voters’ stake in voting with the given …","Decreases the user’s balance and the total supply. If …","Burns all tokens of the given account. See <code>Self::burn()</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns all the bids placed by the given account.","","Returns the total stake of the given account.","","Returns all the voting the given account participated in.","Returns an iterator of token holders.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Increases the user’s balance and the total supply. If …","","","Gets balances of the given account addresses.","","","Increases the voter’s stake and total stake.","Decreases the voter’s stake and total stake.","Gets all the data about the given user stakes.","","","","Returns the total token supply.","","","","","","","","","","","","","","","","Decreases the bidder’s stake and total stake.","Decreases the voter’s stake and total stake.","","","","","","Action to perform against reputation","","","ReputationVoterContract","Provides a reference to a deployed  Reputation Voter …","Defines the  Reputation Voter Contract contract’s public …","A wrapper around <code>ReputationVoterContract</code> to simplify …","Struct storing all information about reputation voting","Informs reputation voting has been created.","","","","","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","","","","","","","","","","","Creates new ReputationVoter voting.","","","","","","","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the Voter’s <code>Ballot</code>.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","","","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","","","A set of validation rules.","A utility to build a set of validation rules.","Adds a generic validation rule.","Adds a voting validation rule.","","","","","","","","","Builds a Rules struct.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates an empty builder.","","","","","","","Validates all the rules.","Validates only the rules that don’t need voting state.","Validates only the rules that require voting state.","Groups validations.","","","Validates if a user is kyc’d. May return Error::NotKyced.","A generic validation.","A validation in the voting context.","","","Groups Bid Escrow-related validations.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Returns the result of validation.","Returns the result of validation.","","Groups voting related validations.","","Verifies if the user can be onboarded. May return …","Verifies if the <code>Bid</code> can be canceled. May return …","Verifies if the worker can place a <code>Bid</code> in the given state. …","Verifies if the worker attempts to bid on his own <code>Job</code>. May …","Verifies if the <code>Job Offer</code> can be canceled in the given …","Makes sure the job poster is the one who picks the <code>Bid</code>. …","Makes sure the job poster is the one who progresses the <code>Job</code>…","Verifies if the proposed payment does not exceeds the …","Verifies if the actual payment matches the proposed …","Verifies if exists conflicting ongoing voting. May return …","Makes sure the bidder is the one who cancels the <code>Bid</code>. May …","Makes sure the job poster is the one who picks the …","Makes sure the <code>Job DOS Fee</code> is high enough. May return …","Makes sure the <code>Job</code> is in grace period state. May return …","Verifies if the user is not onboarded. May return …","Makes sure the stake is non-zero. May return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies if the <code>Formal Voting</code> ended. May return …","Verifies if <code>Voting</code> can be created. May return …","Verifies if a ballot is cast in the right time. May return …","Verifies voting is still in progress. May return …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SimpleVoterContract","Provides a reference to a deployed  Simple Voter Contract .","Defines the  Simple Voter Contract contract’s public …","A wrapper around <code>SimpleVoterContract</code> to simplify testing. …","Informs simple voting has been created.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","Creates new SimpleVoter voting.","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the Voter’s <code>Ballot</code>.","","","","Returns document hash being voted on for a given voting id.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","Erases the voter from Voting with a given id. Read more.","","","","","","","","","","","","","","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","Slashing Voter contract uses VotingEngine to vote on …","Provides a reference to a deployed  Slashing Voter Contract","Defines the  Slashing Voter Contract contract’s public …","A wrapper around <code>SlashingVoterContract</code> to simplify testing.","Informs slashing voting has been created.","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","Creates new Slashing voting.","","","","","","","","","","","Finishes voting. Depending on type of voting, different …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the Voter’s <code>Ballot</code>.","","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Returns the address of nth voter who voted on Voting with …","","","","Returns Voting for given id.","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Remove address from the whitelist. <code>Read more</code>","","","","Returns the address of Reputation Token contract.","","","","","Erases the voter from voting with the given id. Read more.","","","","","","","","","","","","","","","","","Overrides the stored <code>Bid Escrow Contract</code> addresses.","","","","Returns the address of Variable Repository contract.","","","","Casts a vote. Read more","","","","Checks if voting of a given type and id exists.","","","","","","","","Va Owned Nft contract acts like an erc-721 token and …","Provides a reference to a deployed  Va Nft Contract .","Defines the  Va Nft Contract contract’s public interface.","A wrapper around <code>VaNftContract</code> to simplify testing. …","Adds a new address to the whitelist. <code>Read more</code>","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","Returns the number of tokens owned by <code>owner</code>.","","","","Returns a URI prefix that is used by all the assets.","","","","","","","","","","Burns a token with a given id. Decrements the balance of …","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the address of the current owner. <code>Read more</code>.","","","","","Contract constructor.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Creates a new token with the next id and transfers it to a …","","","","Returns a descriptive name for a collection of tokens in …","","","","","Returns the address of the owner of the token.","","","","Remove address from the whitelist. <code>Read more</code>","","","","Gets an abbreviated name for tokens in this contract.","","","","Returns a token id for the given the <code>address</code>.","","","","Returns a distinct Uniform Resource Identifier (URI) for a …","","","","Returns the total number of tokens.","","","","","","","","","","","","","","","","Variable Repository Contract implementation. See …","Provides a reference to a deployed  Variable Repository …","Defines the  Variable Repository Contract contract’s …","A wrapper around <code>VariableRepositoryContract</code> to simplify …","","Adds a new address to the whitelist. <code>Read more</code>","","","","","","Reads all the stored variables and returns a map key to …","","","","","","","","","","","","","","Creates a new caller instance from the given address.","","","","","","","Changes the ownership of the contract. Transfers ownership …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value stored under the given key.","","","","","Returns the full (current and future) value stored under …","","","","Returns the value stored under the given index.","","","","Returns the address of the current owner. <code>Read more</code>.","","","","","Constructor function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","Returns the number of existing keys in the <code>Repository</code>.","","","","","Remove address from the whitelist. <code>Read more</code>","","","","","","","","","","","","","","Inserts or updates the value under the given key.","","","","","","","<code>No</code> vote.","Represents user’s vote.","Choice enum, can be converted to bool using <code>is_in_favor()</code>","<code>Yes</code> vote.","Short version of <code>Ballot</code> struct.","Governance voting is a struct that contracts can use to …","A unique voting identifier.","","","","Gets a vector of all voters’ addresses.","","","","","","","","","","","","","","","","","Indicates if it reverts the previous ballot casted by the …","Records voter’s vote.","Selected option.","","","","","","","","","","","","","","","","Creates new informal Voting.","","","Set of voting events.","Finishes voting.","Marks voting finished but do nothing with the staked …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the Voter’s <code>Ballot</code>.","Returns the nth Ballot of voting with a given id.","Returns the address of the nth voter who voted on Voting …","Returns the Voting for a given id.","Gets voting with a given id or stops contract execution.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Transfers CSPRs to all VAs’. Each VA gets the amount of …","Transfers some part of a given amount to <code>Bid Escrow Wallet</code> …","Utility modules providing references to common contracts …","","","","Updates voting storage.","Erases a voter from a given voting.","Vote power.","Vote power.","Voting utility submodules.","","","","","","","","","","","","","","","","","","","Indicates if the vote counts in the total voting stake.","Iterates over all the ballots and unstakes reputation. …","Writes a vote in the storage.","The voter’s address.","The voter’s address.","Get a reference to the governance voting’s voters.","Gets the total number of users participated in voting.","Checks if voting with the given id and type exists.","A unique voting id.","Voting struct with logic for governance voting","Voting type.","","","","","Event thrown after ballot is canceled during full slashing.","Event thrown after ballot is cast.","Voting process finished.","Voting process finished, voters voted against.","Voting process finished, voters voted in favor.","Informal voting finished.","Represents an explanation for a particular action (mint, …","Event thrown after voting is canceled during full slashing.","Event thrown after voting is created.","Event thrown when voting ends.","","","","","","","","","","","","","","","","","","","","","","","","","","","Selected option.","Selected option.","","","","","","Configuration value - is the time between votes doubled.","Configuration value - formal voting quorum.","Configuration value - formal voting time.","Configuration value - informal voting quorum.","Configuration value - informal voting time.","Configuration value - the time between informal/formal …","Configuration value - total number of onboarded users.","Configuration value - voting clearness delta.","","","","","","","","","","","","","The creator’s address.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vote power.","The amount of tokens staked by the creator","Vote power.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of voters’ addresses to their canceled stakes.","The voter’s address.","The voter’s address.","","","A unique voting id.","A unique voting id.","","A unique voting id.","A unique voting id.","","Voting type (Formal/Informal).","","Voting type (Formal/Informal).","Voting type (Formal/Informal).","","","","","","","Provides references to common contracts that are used by …","A module that stores addresses to common contracts that …","A decorated ContractRefsStorage module that additionally …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns a reference to KYC Token connected to the contract","Returns the address of KYC Token connected to the contract","Returns a reference to Reputation Token connected to the …","","","Returns the address of Reputation Token contract.","","","","","","","","Returns a reference to VA Token connected to the contract","","","Returns a reference to Variable Repository connected to …","","","Returns the address of Variable Repository contract.","","","","A utility module that provides information about the …","A utility module that provides information about the …","","","","","","","","","Clears the flag indicating there is ongoing voting for the …","Indicates whether there is ongoing voting for the given …","Returns the argument unchanged.","Returns the argument unchanged.","Gets the address of the voting subject.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if the <code>address</code> has a non-zero balance of kyc …","Returns true if the <code>address</code> has a non-zero balance of va …","Returns the owner of a token with the given id.","Sets a flag indicating there is ongoing voting for the …","Returns the <code>token id</code> of the <code>address</code>.","","","","","","","","","","Voting rejected.","","Informal voting ended, but the formal one hasn’t started …","","Voting canceled.","The voting interrupted.","Voting created but informal voting is not started.","Formal voting ended.","","Formal voting started.","","Voting passed.","","Informal voting started.","","Too few VA’s voted.","Voting statistics.","Result of Voting.","State of Voting.","The Voting process progression.","Serializable voting state with a state machine …","Serializable finished Voting summary.","Type of Voting (Formal or Informal).","","","","","","","","Adds the <code>stake</code> to the total bound stake.","Adds the <code>stake</code> to the total unbound stake.","","","","","","","","","","","","","","","Removes the unbound stake and adds it to the bound stake.","","","","","","","","","","","","","","","Ends the voting process forcefully and cancels the result.","","","","","","","","","","","","","","","","","","","","","","Ends the informal phase, verifies if the result is close, …","Indicates if Voting is finished or canceled.","Gets the voting’s contract call reference.","","","","","","","","","","","","","","","Gets the voting creator.","","","","","","","","","","Ends the voting process gracefully.","","","","","","","","Gets the <code>Formal Voting</code> statistics.","Gets the informal phase end time.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Gets the current voting result.","Depending on the result of the voting, returns the amount …","Verifies if the formal voting can be finished.","Verifies if a ballot can be casted.","","Gets the <code>Informal Voting</code> statistics.","Gets the informal phase end time.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Indicates if summary refers to formal voting .","Checks is the <code>in_favor</code> stake surpasses the <code>against</code> stake.","Checks if Voting is still in the voting phase.","Checks if Voting is of type Informal and stakes the …","Indicates if the voting process is completed.","Creates a new instance of <code>VotingSummary</code>.","Creates new Voting with immutable <code>VotingConfiguration</code>.","Removes the <code>stake</code> from the total bound stake.","Removes the <code>stake</code> from the total unbound stake.","Returns voting result.","","","","","","","","Get the voting’s stake against.","The total <code>against</code> stake.","Get the voting’s stake in favor.","The total <code>in favor</code> stake.","Gets the current voting state.","Returns the voting state depending on a given <code>block_time</code>.","Gets the informal-formal break end time.","","","","","","","","","","","","","","","Gets the total bound stake.","Gets the sum of bound and unbound stake.","Gets the total unbound stake.","","","","","","","","","","","","","","","","","","","","","","The total unbounded <code>against</code> stake.","The total unbounded <code>in favor</code> stake.","The number of VA’s voted <code>against</code>.","The number of VA’s voted <code>in favor</code>.","Gets a reference to the voting’s voting configuration.","Get the voting’s voting id.","Gets the voting type.","Returns the type of Voting.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,17,17,192,2,3,6,3,3,3,2,3,6,19,17,2,3,6,19,17,3,3,3,2,2,3,6,19,17,2,3,6,19,17,192,2,3,6,17,6,19,17,19,17,192,2,3,6,19,6,19,17,19,17,3,19,3,192,2,3,6,19,17,2,3,6,19,17,19,17,192,2,3,6,3,192,2,3,6,3,192,2,3,6,192,2,3,6,192,2,3,6,6,6,2,3,6,19,17,2,3,6,19,17,2,6,19,17,2,3,6,19,17,192,2,3,6,3,19,192,2,3,6,192,2,3,6,19,17,192,2,3,6,19,17,2,3,6,19,17,2,3,6,19,17,2,3,6,19,17,192,2,3,6,192,2,3,6,192,2,3,6,2,3,6,19,17,0,0,0,0,0,0,193,44,45,46,45,45,45,47,51,44,45,46,47,51,44,45,46,45,45,45,44,0,193,47,44,45,46,47,51,44,45,46,47,51,44,45,46,47,193,47,44,45,46,193,51,44,45,46,193,47,44,45,46,193,44,45,46,193,44,45,46,47,46,46,45,0,45,193,51,44,45,46,47,51,44,45,46,193,44,45,46,193,47,44,45,46,47,193,44,45,46,45,193,51,44,45,46,193,47,44,45,46,47,47,193,44,45,46,45,193,44,45,46,193,44,45,46,193,44,45,46,46,47,51,46,47,51,44,45,46,47,51,44,45,46,47,51,44,46,47,51,44,45,46,193,44,45,46,0,0,193,47,44,45,46,193,51,44,45,46,45,47,193,47,44,45,46,45,193,47,44,45,46,45,193,44,45,46,193,44,45,46,47,193,44,45,46,193,44,45,46,193,44,45,46,0,47,193,47,44,45,46,45,193,51,44,45,46,193,51,44,45,46,45,47,51,44,45,46,47,51,44,45,46,47,51,44,45,46,0,193,44,45,46,193,51,44,45,46,193,44,45,46,47,51,44,45,46,0,0,0,61,61,61,0,61,61,0,0,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,63,52,63,52,62,60,65,63,60,65,61,52,62,63,60,65,61,52,62,60,65,52,52,61,52,62,61,52,62,61,52,62,61,52,62,61,52,62,63,65,52,61,61,52,62,63,60,65,61,52,62,62,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,65,63,52,60,63,65,65,63,52,62,65,65,65,65,63,65,52,52,63,52,63,52,52,52,63,65,52,62,61,52,62,52,63,52,61,52,62,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,63,60,65,61,52,62,60,63,63,60,65,61,52,62,63,52,62,63,63,0,0,0,0,0,0,0,0,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,74,74,74,75,75,75,0,0,0,0,0,74,0,74,53,75,64,76,77,74,53,75,64,76,77,74,53,75,53,64,64,76,64,76,77,74,53,75,64,76,77,74,53,75,64,53,74,53,75,74,53,75,74,53,75,53,74,53,75,74,53,75,76,74,74,75,74,53,64,53,74,53,75,64,76,77,74,53,75,74,53,75,53,64,76,77,74,53,75,64,76,77,74,53,75,64,76,77,74,53,75,64,76,77,74,53,75,53,64,53,64,53,64,53,53,76,76,64,76,53,64,53,64,77,76,53,76,53,74,53,75,53,64,53,53,64,74,53,75,74,53,75,64,64,76,77,74,53,75,64,76,77,74,53,75,64,76,77,74,53,75,53,53,64,76,77,74,53,75,53,64,76,53,0,0,80,80,80,78,0,0,78,0,78,81,79,80,78,54,81,79,80,78,54,54,79,81,79,80,78,54,81,79,80,78,54,79,54,80,54,54,81,54,80,54,80,54,81,54,80,78,81,54,80,54,81,79,80,78,54,80,54,54,81,79,80,78,54,81,79,80,78,54,79,80,78,54,81,79,80,78,54,81,54,81,54,81,81,54,54,80,54,81,54,54,80,54,81,79,80,78,54,81,79,80,78,54,81,79,80,78,54,81,79,80,78,54,0,0,82,83,82,83,82,82,83,82,83,82,82,83,82,82,82,83,83,82,82,82,83,82,82,83,82,83,82,83,82,83,82,83,82,82,83,82,83,82,82,82,82,83,83,82,82,83,82,83,82,83,82,82,83,0,0,0,0,0,55,55,55,55,55,84,55,84,55,55,84,55,84,55,84,55,84,55,55,55,84,84,55,55,55,55,55,55,55,55,55,55,55,55,84,55,55,55,55,55,55,55,84,55,84,55,84,55,84,55,84,55,55,84,84,55,55,55,55,55,55,55,55,55,55,84,55,84,55,84,55,55,55,55,55,55,84,55,0,0,0,0,194,86,87,88,87,87,87,86,87,88,86,87,88,87,87,87,86,86,87,88,86,87,88,194,86,87,88,88,88,87,87,86,87,88,87,194,86,87,88,87,194,86,87,88,88,88,86,87,88,86,87,88,86,88,86,87,88,194,86,87,88,87,194,86,87,88,194,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,0,0,0,0,195,89,90,91,90,90,90,89,90,91,89,90,91,90,90,90,89,195,89,90,91,195,89,90,91,89,90,91,89,90,91,195,89,90,91,195,89,90,91,91,91,90,90,89,90,91,90,195,89,90,91,90,195,89,90,91,91,91,89,90,91,89,90,91,89,91,89,90,91,195,89,90,91,195,89,90,91,195,89,90,91,90,195,89,90,91,195,89,90,91,195,89,90,91,195,89,90,91,195,89,90,91,195,89,90,91,89,90,91,89,90,91,89,90,91,89,90,91,0,0,0,0,0,196,95,96,97,96,96,96,95,96,97,98,95,96,97,98,96,96,96,95,95,96,97,98,95,96,97,98,196,95,96,97,97,98,98,196,95,96,97,98,97,98,98,96,98,96,196,95,96,97,98,95,96,97,98,98,196,95,96,97,96,196,95,96,97,96,196,95,96,97,196,95,96,97,196,95,96,97,97,97,95,96,97,98,95,96,97,98,95,97,98,95,96,97,98,196,95,96,97,196,95,96,97,96,98,196,95,96,97,196,95,96,97,98,196,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,196,95,96,97,196,95,96,97,196,95,96,97,95,96,97,98,0,0,0,0,0,197,99,100,101,100,100,100,99,100,101,102,99,100,101,102,100,100,100,99,99,100,101,102,99,100,101,102,197,99,100,101,101,102,102,197,99,100,101,102,101,102,102,100,102,100,197,99,100,101,102,99,100,101,102,102,197,99,100,101,197,99,100,101,100,197,99,100,101,100,197,99,100,101,197,99,100,101,197,99,100,101,101,101,99,100,101,102,99,100,101,102,99,101,102,99,100,101,102,197,99,100,101,100,102,197,99,100,101,197,99,100,101,0,102,197,99,100,101,100,102,99,100,101,102,99,100,101,102,99,100,101,102,197,99,100,101,197,99,100,101,0,197,99,100,101,99,100,101,102,0,0,104,103,104,103,104,103,104,103,103,103,103,103,103,104,104,103,104,103,103,104,103,104,103,104,103,104,103,104,104,103,103,104,103,104,104,103,103,104,103,104,103,104,103,104,103,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,0,106,106,106,107,106,108,107,106,108,106,106,106,107,107,106,108,107,106,108,108,108,106,106,107,106,108,106,198,107,106,108,106,198,107,106,108,198,107,106,108,108,108,107,106,108,107,106,108,107,108,107,106,108,106,198,107,106,108,107,106,108,107,106,108,107,106,108,107,106,108,0,0,0,0,0,199,109,110,111,110,110,110,109,110,111,112,109,110,111,112,110,110,110,109,109,110,111,112,109,110,111,112,199,109,110,111,111,112,112,199,109,110,111,112,111,112,112,110,112,110,199,109,110,111,112,109,110,111,112,112,199,109,110,111,110,199,109,110,111,110,199,109,110,111,199,109,110,111,199,109,110,111,111,111,109,110,111,112,109,110,111,112,109,111,112,109,110,111,112,199,109,110,111,110,112,199,109,110,111,199,109,110,111,112,199,109,110,111,112,109,110,111,112,109,110,111,112,109,110,111,112,199,109,110,111,199,109,110,111,199,109,110,111,109,110,111,112,0,0,0,0,0,0,115,200,113,114,115,114,119,120,114,115,200,113,114,115,119,120,114,113,114,115,119,120,113,114,115,119,120,114,114,114,113,200,113,114,115,113,114,115,119,120,113,114,115,119,120,200,113,114,115,200,113,114,115,200,113,114,115,200,113,114,115,200,113,114,115,200,113,114,115,200,113,114,115,115,119,120,119,120,119,120,115,119,120,119,120,114,119,120,114,119,120,113,114,115,119,120,119,120,114,200,113,114,115,114,200,113,114,115,200,113,114,115,115,115,113,114,115,119,120,113,114,115,119,120,113,115,119,120,113,114,115,119,120,200,113,114,115,200,113,114,115,200,113,114,115,114,200,113,114,115,200,113,114,115,115,200,113,114,115,115,119,120,200,113,114,115,200,113,114,115,200,113,114,115,115,0,119,120,200,113,114,115,113,114,115,119,120,113,114,115,119,120,113,114,115,119,120,200,113,114,115,200,113,114,115,113,114,115,119,120,0,0,0,0,0,122,122,116,121,123,124,122,116,121,123,124,123,116,122,116,121,123,124,122,116,121,123,124,123,124,124,123,123,116,121,116,121,116,121,116,116,121,122,116,121,123,124,116,121,124,121,124,121,124,123,122,123,124,122,116,121,123,124,122,116,121,123,124,122,116,121,123,124,122,116,121,123,124,123,116,121,122,116,121,124,124,122,116,121,116,123,122,116,121,123,124,122,116,121,123,124,122,116,121,123,124,124,124,122,116,121,123,124,0,130,130,0,0,0,0,0,0,130,131,131,131,201,127,128,129,128,128,131,128,130,131,127,128,129,132,130,131,127,128,129,132,128,128,128,127,130,131,127,128,129,132,130,131,127,128,129,132,201,127,128,129,130,131,130,131,130,131,129,130,131,132,130,131,132,201,127,128,129,131,132,129,130,130,131,132,130,131,132,128,132,128,201,127,128,129,130,131,132,130,131,127,128,129,132,130,131,132,201,127,128,129,128,201,127,128,129,128,201,127,128,129,201,127,128,129,201,127,128,129,129,129,130,131,127,128,129,132,130,131,127,128,129,132,130,131,127,129,132,130,131,127,128,129,132,201,127,128,129,128,132,201,127,128,129,201,127,128,129,130,130,131,132,201,127,128,129,130,131,132,130,131,130,131,127,128,129,132,130,131,127,128,129,132,130,131,127,128,129,132,201,127,128,129,201,127,128,129,201,127,128,129,130,131,127,128,129,132,0,0,134,134,134,137,134,137,134,137,134,137,134,134,134,137,134,137,134,137,134,137,134,134,137,134,137,134,137,137,137,137,0,134,137,0,0,0,138,138,0,138,138,138,138,138,138,138,138,138,138,138,135,136,138,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,150,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,150,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,0,0,0,0,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,155,156,157,158,0,0,0,0,0,202,159,160,161,160,160,160,159,160,161,162,159,160,161,162,160,160,160,159,159,160,161,162,159,160,161,162,202,159,160,161,161,162,162,202,159,160,161,162,161,162,162,160,162,160,202,159,160,161,162,159,160,161,162,162,202,159,160,161,202,159,160,161,160,202,159,160,161,160,202,159,160,161,202,159,160,161,202,159,160,161,161,161,159,160,161,162,159,160,161,162,159,161,162,159,160,161,162,202,159,160,161,160,162,202,159,160,161,202,159,160,161,162,202,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,202,159,160,161,202,159,160,161,202,159,160,161,159,160,161,162,0,0,0,0,0,203,163,164,165,164,164,164,163,164,165,166,163,164,165,166,164,164,164,163,163,164,165,166,163,164,165,166,203,163,164,165,165,166,166,203,163,164,165,166,165,166,166,164,166,164,203,163,164,165,166,163,164,165,166,166,203,163,164,165,164,203,163,164,165,164,203,163,164,165,203,163,164,165,203,163,164,165,165,165,163,164,165,166,163,164,165,166,163,165,166,163,164,165,166,203,163,164,165,164,166,203,163,164,165,203,163,164,165,166,203,163,164,165,166,163,164,165,166,163,164,165,166,163,164,165,166,203,163,164,165,203,163,164,165,203,163,164,165,203,163,164,165,163,164,165,166,0,0,0,0,204,167,168,169,168,168,168,167,168,169,167,168,169,168,168,168,167,204,167,168,169,204,167,168,169,167,168,169,167,168,169,204,167,168,169,204,167,168,169,169,169,168,168,167,168,169,168,204,167,168,169,168,204,167,168,169,169,169,167,168,169,167,168,169,167,169,167,168,169,204,167,168,169,204,167,168,169,204,167,168,169,168,204,167,168,169,204,167,168,169,204,167,168,169,204,167,168,169,204,167,168,169,204,167,168,169,167,168,169,167,168,169,167,168,169,167,168,169,0,0,0,0,172,205,170,171,172,171,171,205,170,171,172,171,170,171,172,170,171,172,171,171,171,170,170,171,172,170,171,172,205,170,171,172,172,172,171,171,170,171,172,205,170,171,172,171,205,170,171,172,205,170,171,172,205,170,171,172,171,205,170,171,172,172,172,170,171,172,170,171,172,170,172,170,171,172,205,170,171,172,205,170,171,172,171,205,170,171,172,172,170,171,172,170,171,172,170,171,172,205,170,171,172,170,171,172,43,0,0,43,0,0,0,43,28,118,174,43,28,118,174,43,28,118,174,43,28,118,174,43,28,118,174,28,174,28,43,28,118,43,28,118,43,28,118,43,28,118,43,28,118,174,43,43,0,174,174,43,28,118,43,28,118,118,174,43,28,118,174,174,174,174,174,174,43,28,118,174,43,28,118,174,43,28,118,174,43,28,118,174,43,43,28,0,0,0,43,28,118,174,174,28,118,0,43,28,118,43,28,118,43,28,118,174,43,28,118,174,43,28,118,174,28,174,174,28,118,174,174,174,28,0,28,43,28,118,174,0,0,178,178,178,178,0,0,0,0,178,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,181,180,182,178,39,178,178,178,39,39,39,39,39,39,39,39,178,180,39,181,182,183,178,180,39,181,182,183,39,180,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,180,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,181,180,39,181,182,183,178,178,180,39,181,182,183,180,39,182,181,181,181,178,180,39,181,182,183,178,178,180,39,181,182,183,178,180,39,181,182,183,178,180,39,181,182,183,181,181,181,183,180,182,181,181,180,39,181,182,183,181,180,181,182,183,178,180,39,181,182,183,0,0,0,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,187,187,176,186,187,186,187,186,187,186,187,186,187,176,186,187,176,186,187,186,187,186,187,0,0,188,189,188,189,188,189,188,189,188,188,188,189,188,188,189,188,189,188,189,188,189,188,189,188,189,189,188,189,188,189,188,189,188,189,188,189,191,184,191,190,191,184,190,190,190,24,190,191,184,24,190,191,184,0,0,0,0,0,0,0,184,24,190,191,175,185,33,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,185,184,24,190,191,184,24,190,191,33,184,24,190,191,175,185,33,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,33,33,33,24,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,175,33,33,33,175,175,33,33,33,175,184,24,190,191,175,185,33,33,185,33,185,33,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,33,33,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,184,24,190,191,175,185,33,185,185,185,185,33,33,175,33,184,24,190,191,175,185,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[2,1]],[[3,1],[[5,[4]]]],[[6,1]],[3,1],[[3,7],3],[[3,1],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[3,9],3],[[3,10,[0,[11,12,13]]]],[[3,[0,[11,12,13]]]],[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[2,1]],[[3,1],[[5,[4]]]],[[6,1]],[[],14],[[],15],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[1,17,1,18]],[[2,1,17,1,18]],[[3,1,17,1,18],[[5,[4]]]],[[6,1,17,1,18]],[19],[[],20],[[19,19],21],[[17,17],21],[[],21],[[],21],[[3,10],11],[[],22],[3,10],[[23,24]],[[2,23,24]],[[3,23,24],[[5,[4]]]],[[6,23,24]],[[19,25],26],[[17,25],26],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[2,23,24,1],[[29,[28]]]],[[3,23,24,1],[[29,[28]]]],[[6,23,24,1],[[29,[28]]]],[3,30],[[],[[29,[1]]]],[2,[[29,[1]]]],[3,[[29,[1]]]],[6,[[29,[1]]]],[3,31],[[23,24,32],[[29,[1]]]],[[2,23,24,32],[[29,[1]]]],[[3,23,24,32],[[29,[1]]]],[[6,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[2,23],[[29,[33]]]],[[3,23],[[29,[33]]]],[[6,23],[[29,[33]]]],[[1,1,1]],[[2,1,1,1]],[[3,1,1,1],[[5,[4]]]],[[6,1,1,1]],[[]],[34,6],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[2,1],21],[[3,1],21],[[6,1],21],[[30,1,1,1],3],[[1,17,1,39],19],[1],[[2,1]],[[3,1],[[5,[4]]]],[[6,1]],[[],1],[2,1],[3,1],[6,1],[19,9],[17,9],[[1,23]],[[2,1,23]],[[3,1,23],[[5,[4]]]],[[6,1,23]],[19,[[5,[[41,[40]],27]]]],[17,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],1],[2,1],[3,1],[6,1],[[23,24,43,18]],[[2,23,24,43,18]],[[3,23,24,43,18],[[5,[4]]]],[[6,23,24,43,18]],[[23,24],21],[[2,23,24],21],[[3,23,24],21],[[6,23,24],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[[44,1]],[[45,1],[[5,[4]]]],[[46,1]],[45,1],[[45,7],45],[[45,1],45],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[45,9],45],[[45,10,[0,[11,12,13]]]],[[45,[0,[11,12,13]]]],[1,44],0,[[],32],[47,32],[44,32],[45,32],[46,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,48]],[49],[[47,49]],[[44,49]],[[45,49],[[5,[4]]]],[[46,49]],[50],[[51,50]],[[44,50]],[[45,50],[[5,[4]]]],[[46,50]],[48],[[47,48]],[[44,48]],[[45,48],[[5,[4]]]],[[46,48]],[[1,23]],[[44,1,23]],[[45,1,23],[[5,[4]]]],[[46,1,23]],[1],[[44,1]],[[45,1],[[5,[4]]]],[[46,1]],[[47,1],[[41,[48]]]],[[],15],[[],20],[[45,10],11],0,[45,10],[[23,24]],[[51,23,24]],[[44,23,24]],[[45,23,24],[[5,[4]]]],[[46,23,24]],[[]],[[]],[[]],[[]],[[]],[[23,24,1],[[29,[28]]]],[[44,23,24,1],[[29,[28]]]],[[45,23,24,1],[[29,[28]]]],[[46,23,24,1],[[29,[28]]]],[49,[[29,[52]]]],[[47,49],[[29,[52]]]],[[44,49],[[29,[52]]]],[[45,49],[[29,[52]]]],[[46,49],[[29,[52]]]],[[47,49],52],[[],18],[44,18],[45,18],[46,18],[45,30],[50,[[29,[53]]]],[[51,50],[[29,[53]]]],[[44,50],[[29,[53]]]],[[45,50],[[29,[53]]]],[[46,50],[[29,[53]]]],[48,[[29,[54]]]],[[47,48],[[29,[54]]]],[[44,48],[[29,[54]]]],[[45,48],[[29,[54]]]],[[46,48],[[29,[54]]]],[[47,53],55],[[47,48],54],[[],[[29,[1]]]],[44,[[29,[1]]]],[45,[[29,[1]]]],[46,[[29,[1]]]],[45,31],[[23,24,32],[[29,[1]]]],[[44,23,24,32],[[29,[1]]]],[[45,23,24,32],[[29,[1]]]],[[46,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[44,23],[[29,[33]]]],[[45,23],[[29,[33]]]],[[46,23],[[29,[33]]]],[[1,1,1,1]],[[44,1,1,1,1]],[[45,1,1,1,1],[[5,[4]]]],[[46,1,1,1,1]],[[]],[34,47],[34,51],[34,46],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[44,1],21],[[45,1],21],[[46,1],21],0,0,[[],32],[47,32],[44,32],[45,32],[46,32],[[],32],[51,32],[44,32],[45,32],[46,32],[[30,1,1,1,1],45],[47,49],[[32,32,56]],[[47,32,32,56]],[[44,32,32,56]],[[45,32,32,56],[[5,[4]]]],[[46,32,32,56]],[[45,32,32,18],[[5,[4]]]],[[57,18,56]],[[47,57,18,56]],[[44,57,18,56]],[[45,57,18,56],[[5,[4]]]],[[46,57,18,56]],[[45,57,18,18],[[5,[4]]]],[1],[[44,1]],[[45,1],[[5,[4]]]],[[46,1]],[[],1],[44,1],[45,1],[46,1],[[47,48]],[1],[[44,1]],[[45,1],[[5,[4]]]],[[46,1]],[49],[[44,49]],[[45,49],[[5,[4]]]],[[46,49]],[[1,23]],[[44,1,23]],[[45,1,23],[[5,[4]]]],[[46,1,23]],0,[[47,52]],[[48,57,18,18,21,[29,[56]]]],[[47,48,57,18,18,21,[29,[56]]]],[[44,48,57,18,18,21,[29,[56]]]],[[45,48,57,18,18,21,[29,[56]]],[[5,[4]]]],[[46,48,57,18,18,21,[29,[56]]]],[[45,48,57,18,18,21,18],[[5,[4]]]],[[50,58]],[[51,50,58]],[[44,50,58]],[[45,50,58],[[5,[4]]]],[[46,50,58]],[[50,58,18,21,[29,[56]]]],[[51,50,58,18,21,[29,[56]]]],[[44,50,58,18,21,[29,[56]]]],[[45,50,58,18,21,[29,[56]]],[[5,[4]]]],[[46,50,58,18,21,[29,[56]]]],[[45,50,58,18,21,18],[[5,[4]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],0,[[],1],[44,1],[45,1],[46,1],[[23,24,43,18]],[[51,23,24,43,18]],[[44,23,24,43,18]],[[45,23,24,43,18],[[5,[4]]]],[[46,23,24,43,18]],[[23,24],21],[[44,23,24],21],[[45,23,24],21],[[46,23,24],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[59],[59],[59],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[52,49],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[52,60]],[52],[[],14],[[],14],[[],14],[61,61],[52,52],[62,62],[[]],[[]],[[]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],0,0,0,[[61,61],21],[[61,25],26],[[52,25],26],[[62,25],26],[[]],[[]],[[]],[[]],[[]],[52,62],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,0,0,0,0,0,0,0,[63,52],[[49,18,1],62],0,0,0,0,0,0,0,[[52,64]],0,0,0,0,[[52,65],52],[52],0,0,0,0,[61,9],[52,9],[62,9],0,0,0,[61,[[5,[[41,[40]],27]]]],[52,[[5,[[41,[40]],27]]]],[62,[[5,[[41,[40]],27]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[66],[67],[68],[69],[70],[71],[72],[73],[[66,66],21],[[67,67],21],[[68,68],21],[[69,69],21],[[70,70],21],[[71,71],21],[[72,72],21],[[73,73],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[66,25],26],[[67,25],26],[[68,25],26],[[69,25],26],[[70,25],26],[[71,25],26],[[72,25],26],[[73,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[54,66],[[49,48,1,21,57,18,[29,[18]],[29,[18]]],67],[53,68],[53,69],[53,70],[[53,1,58],71],[[53,1],72],[[53,1],73],[66,9],[67,9],[68,9],[69,9],[70,9],[71,9],[72,9],[73,9],[66,[[5,[[41,[40]],27]]]],[67,[[5,[[41,[40]],27]]]],[68,[[5,[[41,[40]],27]]]],[69,[[5,[[41,[40]],27]]]],[70,[[5,[[41,[40]],27]]]],[71,[[5,[[41,[40]],27]]]],[72,[[5,[[41,[40]],27]]]],[73,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[59],[59],[59],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[53,49],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[53,1],[[5,[4]]]],[[],14],[[],14],[[],14],[74,74],[53,53],[75,75],[[]],[[]],[[]],[53],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],0,[[],74],[[74,74],21],[[75,75],21],[[],21],[53,18],0,[53,57],[[74,25],26],[[53,25],26],[[75,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[53,18],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[53,21],0,[53,50],0,[53,48],0,[53,[[29,[58]]]],[64,53],0,0,0,0,[53,18],0,[53,1],0,0,0,[[53,76],53],0,[53,[[29,[58]]]],[74,9],[53,9],[75,9],[[53,23]],0,[53,74],[[53,77]],0,[74,[[5,[[41,[40]],27]]]],[53,[[5,[[41,[40]],27]]]],[75,[[5,[[41,[40]],27]]]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[53,57],[[5,[4]]]],[53,[[29,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[53,1],0,0,[53,75],0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[54,57],78],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[54,79]],[[],14],[[],14],[54,55],0,0,[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],0,0,[[80,80],21],[[78,78],21],0,0,[[80,25],26],[[54,25],26],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[54,64]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,0,0,0,0,0,0,[81,54],[80,9],[54,9],0,0,0,[80,[[5,[[41,[40]],27]]]],[54,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[82,32],[[]],[[]],[[]],[[]],[[82,1],[[41,[48]]]],[[]],[[]],[[82,49],[[29,[52]]]],[[82,49],52],[[82,48],32],[[83,50],[[29,[53]]]],[[83,23],53],[[82,48],[[29,[54]]]],[[82,53],55],[[82,48],54],[[83,50],53],[[82,48,32],52],[34,82],[34,83],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,[82,32],[83,32],[82,49],[83,50],[82,48],[[82,1,48]],[[82,52]],[[82,48,49]],[[83,53]],[[83,23,50]],[[82,54]],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[82,48,54]],[[]],[[]],0,0,0,0,0,[59],[[55,18],18],[[55,18],18],[[55,18],18],[[55,18],18],[[],8],[[],8],[[],8],[[],8],[55,1],[[84,1],84],[[55,1]],[[]],[[]],[[]],[[]],[84,55],[[],14],[55,55],[[]],[[84,85],84],[[84,[41,[85]]],84],[55,41],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[55,18],[[5,[18,4]]]],[55,18],[55,21],[55],[55,1],[55,[[29,[18]]]],[[55,25],26],[55,32],[55,57],[[]],[[]],[[],[[5,[27]]]],[55,[[29,[1]]]],[55,21],[55,32],[55,57],[55,57],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[84,21],84],[55,21],[[55,18],21],[[],84],[[84,21],84],[55,21],[55,57],[55,9],[55,21],[55,21],[55,21],[55,57],[55,[[5,[[41,[40]],27]]]],[[]],[55,18],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[55,57],[55,21],[55,18],[55,57],[55,1],[[]],[[]],0,0,0,0,[1],[[86,1]],[[87,1],[[5,[4]]]],[[88,1]],[87,1],[[87,7],87],[[87,1],87],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[87,9],87],[[87,10,[0,[11,12,13]]]],[[87,[0,[11,12,13]]]],[1,86],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[86,1]],[[87,1],[[5,[4]]]],[[88,1]],[[],15],[[],20],[[87,10],11],[87,10],[[]],[[]],[[]],[87,30],[[],[[29,[1]]]],[86,[[29,[1]]]],[87,[[29,[1]]]],[88,[[29,[1]]]],[87,31],[[]],[86],[87,[[5,[4]]]],[88],[[]],[34,88],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[86,1],21],[[87,1],21],[[88,1],21],[30,87],[[],23],[86,23],[87,23],[88,23],[1],[[86,1]],[[87,1],[[5,[4]]]],[[88,1]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[]],[[]],[[]],0,0,0,0,[1],[[89,1]],[[90,1],[[5,[4]]]],[[91,1]],[90,1],[[90,7],90],[[90,1],90],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[90,9],90],[[90,10,[0,[11,12,13]]]],[[90,[0,[11,12,13]]]],[1,89],[1,18],[[89,1],18],[[90,1],18],[[91,1],18],[[],92],[89,92],[90,92],[91,92],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[89,1]],[[90,1],[[5,[4]]]],[[91,1]],[1],[[89,1]],[[90,1],[[5,[4]]]],[[91,1]],[[],15],[[],20],[[90,10],11],[90,10],[[]],[[]],[[]],[90,30],[[],[[29,[1]]]],[89,[[29,[1]]]],[90,[[29,[1]]]],[91,[[29,[1]]]],[90,31],[[93,93,92]],[[89,93,93,92]],[[90,93,93,92],[[5,[4]]]],[[91,93,93,92]],[[]],[34,91],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[89,1],21],[[90,1],21],[[91,1],21],[1],[[89,1]],[[90,1],[[5,[4]]]],[[91,1]],[[],93],[89,93],[90,93],[91,93],[[30,93,93,92],90],[94,[[29,[1]]]],[[89,94],[[29,[1]]]],[[90,94],[[29,[1]]]],[[91,94],[[29,[1]]]],[1],[[89,1]],[[90,1],[[5,[4]]]],[[91,1]],[[],93],[89,93],[90,93],[91,93],[1,[[29,[94]]]],[[89,1],[[29,[94]]]],[[90,1],[[29,[94]]]],[[91,1],[[29,[94]]]],[94,92],[[89,94],92],[[90,94],92],[[91,94],92],[[],18],[89,18],[90,18],[91,18],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[]],[[]],[[]],0,0,0,0,0,[1],[[95,1]],[[96,1],[[5,[4]]]],[[97,1]],[96,1],[[96,7],96],[[96,1],96],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[96,9],96],[[96,10,[0,[11,12,13]]]],[[96,[0,[11,12,13]]]],[1,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[95,1]],[[96,1],[[5,[4]]]],[[97,1]],[[],15],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[1,58,18]],[[95,1,58,18]],[[96,1,58,18],[[5,[4]]]],[[97,1,58,18]],[98],[[],20],[[98,98],21],[[],21],[[96,10],11],[[],22],[96,10],[[23,24]],[[95,23,24]],[[96,23,24],[[5,[4]]]],[[97,23,24]],[[98,25],26],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[95,23,24,1],[[29,[28]]]],[[96,23,24,1],[[29,[28]]]],[[97,23,24,1],[[29,[28]]]],[96,30],[[],[[29,[1]]]],[95,[[29,[1]]]],[96,[[29,[1]]]],[97,[[29,[1]]]],[96,31],[[23,24,32],[[29,[1]]]],[[95,23,24,32],[[29,[1]]]],[[96,23,24,32],[[29,[1]]]],[[97,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[95,23],[[29,[33]]]],[[96,23],[[29,[33]]]],[[97,23],[[29,[33]]]],[[1,1,1,1]],[[95,1,1,1,1]],[[96,1,1,1,1],[[5,[4]]]],[[97,1,1,1,1]],[[]],[34,97],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[95,1],21],[[96,1],21],[[97,1],21],[[],1],[95,1],[96,1],[97,1],[[30,1,1,1,1],96],[[1,58,39],98],[1],[[95,1]],[[96,1],[[5,[4]]]],[[97,1]],[[],1],[95,1],[96,1],[97,1],[98,9],[[1,23]],[[95,1,23]],[[96,1,23],[[5,[4]]]],[[97,1,23]],[98,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],1],[95,1],[96,1],[97,1],[[23,24,43,18]],[[95,23,24,43,18]],[[96,23,24,43,18],[[5,[4]]]],[[97,23,24,43,18]],[[23,24],21],[[95,23,24],21],[[96,23,24],21],[[97,23,24],21],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[99,1]],[[100,1],[[5,[4]]]],[[101,1]],[100,1],[[100,7],100],[[100,1],100],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[100,9],100],[[100,10,[0,[11,12,13]]]],[[100,[0,[11,12,13]]]],[1,99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[99,1]],[[100,1],[[5,[4]]]],[[101,1]],[[],15],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[58,56]],[[99,58,56]],[[100,58,56],[[5,[4]]]],[[101,58,56]],[102],[[],20],[[102,102],21],[[],21],[[100,10],11],[[],22],[100,10],[[23,24]],[[99,23,24]],[[100,23,24],[[5,[4]]]],[[101,23,24]],[[102,25],26],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[99,23,24,1],[[29,[28]]]],[[100,23,24,1],[[29,[28]]]],[[101,23,24,1],[[29,[28]]]],[[],18],[99,18],[100,18],[101,18],[100,30],[[],[[29,[1]]]],[99,[[29,[1]]]],[100,[[29,[1]]]],[101,[[29,[1]]]],[100,31],[[23,24,32],[[29,[1]]]],[[99,23,24,32],[[29,[1]]]],[[100,23,24,32],[[29,[1]]]],[[101,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[99,23],[[29,[33]]]],[[100,23],[[29,[33]]]],[[101,23],[[29,[33]]]],[[1,1,1,1]],[[99,1,1,1,1]],[[100,1,1,1,1],[[5,[4]]]],[[101,1,1,1,1]],[[]],[34,101],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[99,1],21],[[100,1],21],[[101,1],21],[[30,1,1,1,1],100],[[58,18,39],102],[1],[[99,1]],[[100,1],[[5,[4]]]],[[101,1]],[[],1],[99,1],[100,1],[101,1],0,[102,9],[[1,23]],[[99,1,23]],[[100,1,23],[[5,[4]]]],[[101,1,23]],[[100,58,18],[[5,[4]]]],[102,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],1],[99,1],[100,1],[101,1],[[23,24,43,18]],[[99,23,24,43,18]],[[100,23,24,43,18],[[5,[4]]]],[[101,23,24,43,18]],0,[[23,24],21],[[99,23,24],21],[[100,23,24],21],[[101,23,24],21],[[]],[[]],[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[],14],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[103,1],[103,18],0,0,[[103,25],26],[[]],[[]],[[],[[5,[27]]]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,0,[104,103],[103,58],0,[103,18],0,0,[103,9],[103,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[]],[[]],0,[[],8],[[],8],[[]],[[]],[[105,23,24]],[[]],[[105,23],[[29,[103]]]],[34,105],[[]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[[105,58,18],39],[[],5],[[],5],[[],42],[[105,23,24,43,18]],[[]],0,0,0,0,[106,1],[[106,7],106],[[106,1],106],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[106,9],106],[[106,10,[0,[11,12,13]]]],[[106,[0,[11,12,13]]]],[1,107],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],20],[[106,10],11],[106,10],[[]],[[]],[[]],[106,30],[[],[[29,[1]]]],[107,[[29,[1]]]],[106,[[29,[1]]]],[108,[[29,[1]]]],[106,31],[[],18],[107,18],[106,18],[108,18],[18],[[107,18]],[[106,18],[[5,[4]]]],[[108,18]],[[]],[34,108],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[30,18],106],[18],[[107,18]],[[106,18],[[5,[4]]]],[[108,18]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[]],[[]],[[]],0,0,0,0,0,[1],[[109,1]],[[110,1],[[5,[4]]]],[[111,1]],[110,1],[[110,7],110],[[110,1],110],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[110,9],110],[[110,10,[0,[11,12,13]]]],[[110,[0,[11,12,13]]]],[1,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[109,1]],[[110,1],[[5,[4]]]],[[111,1]],[[],15],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[1,93,16,[29,[7]],18]],[[109,1,93,16,[29,[7]],18]],[[110,1,93,16,[29,[7]],18],[[5,[4]]]],[[111,1,93,16,[29,[7]],18]],[112],[[],20],[[112,112],21],[[],21],[[110,10],11],[[],22],[110,10],[[23,24]],[[109,23,24]],[[110,23,24],[[5,[4]]]],[[111,23,24]],[[112,25],26],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[109,23,24,1],[[29,[28]]]],[[110,23,24,1],[[29,[28]]]],[[111,23,24,1],[[29,[28]]]],[110,30],[[],[[29,[1]]]],[109,[[29,[1]]]],[110,[[29,[1]]]],[111,[[29,[1]]]],[110,31],[[23,24,32],[[29,[1]]]],[[109,23,24,32],[[29,[1]]]],[[110,23,24,32],[[29,[1]]]],[[111,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[109,23],[[29,[33]]]],[[110,23],[[29,[33]]]],[[111,23],[[29,[33]]]],[[1,1,1]],[[109,1,1,1]],[[110,1,1,1],[[5,[4]]]],[[111,1,1,1]],[[]],[34,111],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[109,1],21],[[110,1],21],[[111,1],21],[[30,1,1,1],110],[[1,93,16,[29,[7]],39],112],[1],[[109,1]],[[110,1],[[5,[4]]]],[[111,1]],[[],1],[109,1],[110,1],[111,1],[112,9],[[1,23]],[[109,1,23]],[[110,1,23],[[5,[4]]]],[[111,1,23]],[112,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],1],[109,1],[110,1],[111,1],[[23,24,43,18]],[[109,23,24,43,18]],[[110,23,24,43,18],[[5,[4]]]],[[111,23,24,43,18]],[[23,24],21],[[109,23,24],21],[[110,23,24],21],[[111,23,24],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[113,1]],[[114,1],[[5,[4]]]],[[115,1]],[114,1],0,0,[[114,7],114],0,[[],116],[113,116],[114,116],[115,116],0,0,[[114,1],114],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[114,9],114],[[114,10,[0,[11,12,13]]]],[[114,[0,[11,12,13]]]],[1,113],[1,18],[[113,1],18],[[114,1],18],[[115,1],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[117,[1,18]],[117,[1,18]]]],[[113,[117,[1,18]],[117,[1,18]]]],[[114,[117,[1,18]],[117,[1,18]]],[[5,[4]]]],[[115,[117,[1,18]],[117,[1,18]]]],[[[41,[62]]]],[[113,[41,[62]]]],[[114,[41,[62]]],[[5,[4]]]],[[115,[41,[62]]]],[[23,[41,[118]]]],[[113,23,[41,[118]]]],[[114,23,[41,[118]]],[[5,[4]]]],[[115,23,[41,[118]]]],[[1,18]],[[113,1,18]],[[114,1,18],[[5,[4]]]],[[115,1,18]],[1],[[113,1]],[[114,1],[[5,[4]]]],[[115,1]],[[1,18]],[[113,1,18]],[[114,1,18],[[5,[4]]]],[[115,1,18]],[1],[[113,1]],[[114,1],[[5,[4]]]],[[115,1]],[[],15],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[119],[120],[[],20],[[119,119],21],[[120,120],21],[[],21],[[],21],[[114,10],11],[[],22],[[],22],[114,10],[[119,25],26],[[120,25],26],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[114,30],[[],[[29,[1]]]],[113,[[29,[1]]]],[114,[[29,[1]]]],[115,[[29,[1]]]],[114,31],[1,18],[[113,1],18],[[114,1],18],[[115,1],18],[[]],[113],[114,[[5,[4]]]],[115],[[]],[34,115],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[113,1],21],[[114,1],21],[[115,1],21],[[1,18]],[[113,1,18]],[[114,1,18],[[5,[4]]]],[[115,1,18]],[[1,18]],[[113,1,18]],[[114,1,18],[[5,[4]]]],[[115,1,18]],[30,114],[[[41,[1]]],116],[[113,[41,[1]]],116],[[114,[41,[1]]],116],[[115,[41,[1]]],116],[1,18],[[113,1],18],[[114,1],18],[[115,1],18],0,[1],[[113,1]],[[114,1],[[5,[4]]]],[[115,1]],0,[119,9],[120,9],[62],[[113,62]],[[114,62],[[5,[4]]]],[[115,62]],[[23,118]],[[113,23,118]],[[114,23,118],[[5,[4]]]],[[115,23,118]],[1,121],[[113,1],121],[[114,1],121],[[115,1],121],0,0,[119,[[5,[[41,[40]],27]]]],[120,[[5,[[41,[40]],27]]]],[[],18],[113,18],[114,18],[115,18],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[62],[[113,62]],[[114,62],[[5,[4]]]],[[115,62]],[[23,118]],[[113,23,118]],[[114,23,118],[[5,[4]]]],[[115,23,118]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[122,116],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[123,1],18],[116,117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,[117,[1,18]],[117,[1,18]]]],[[124,[41,[62]]]],[[124,23,[41,[118]]]],[[123,1,18]],[[123,1]],[[],14],[[],14],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],116],[[116,25],26],[[121,25],26],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[124,1],41],[121,125],[[124,1],18],[121,125],[[124,1],41],[123,[[126,[1]]]],[34,122],[34,123],[34,124],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[123,1,18]],[[[117,[1,18]],18],116],[[1,41,41],121],[[122,[41,[1]]],116],[116,9],[121,9],[[124,62]],[[124,23,118]],[[122,1],121],[116,[[5,[[41,[40]],27]]]],[121,[[5,[[41,[40]],27]]]],[116,18],[123,18],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[124,62]],[[124,23,118]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[59],[59],0,0,[1],[[127,1]],[[128,1],[[5,[4]]]],[[129,1]],[128,1],[[128,7],128],0,[[128,1],128],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[128,9],128],[[128,10,[0,[11,12,13]]]],[[128,[0,[11,12,13]]]],[1,127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[127,1]],[[128,1],[[5,[4]]]],[[129,1]],[[],14],[[],14],[130,130],[131,131],[[]],[[]],[[],15],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[1,130,18,58,18]],[[127,1,130,18,58,18]],[[128,1,130,18,58,18],[[5,[4]]]],[[129,1,130,18,58,18]],0,[132],[[],20],[130,93],[[130,130],21],[[131,131],21],[[132,132],21],[[],21],[[],21],[[],21],[[128,10],11],[[],22],[128,10],[[23,24]],[[127,23,24]],[[128,23,24],[[5,[4]]]],[[129,23,24]],[[130,25],26],[[131,25],26],[[132,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[127,23,24,1],[[29,[28]]]],[[128,23,24,1],[[29,[28]]]],[[129,23,24,1],[[29,[28]]]],[128,30],[[],[[29,[1]]]],[127,[[29,[1]]]],[128,[[29,[1]]]],[129,[[29,[1]]]],[128,31],[[23,24,32],[[29,[1]]]],[[127,23,24,32],[[29,[1]]]],[[128,23,24,32],[[29,[1]]]],[[129,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[127,23],[[29,[33]]]],[[128,23],[[29,[33]]]],[[129,23],[[29,[33]]]],[[1,1,1]],[[127,1,1,1]],[[128,1,1,1],[[5,[4]]]],[[129,1,1,1]],[[]],[34,129],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[127,1],21],[[128,1],21],[[129,1],21],[[30,1,1,1],128],[[1,130,18,58,39],132],[1],[[127,1]],[[128,1],[[5,[4]]]],[[129,1]],[[],1],[127,1],[128,1],[129,1],[[130,1,18],133],[130,9],[131,9],[132,9],[[1,23]],[[127,1,23]],[[128,1,23],[[5,[4]]]],[[129,1,23]],[130,[[5,[[41,[40]],27]]]],[131,[[5,[[41,[40]],27]]]],[132,[[5,[[41,[40]],27]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],1],[127,1],[128,1],[129,1],[[23,24,43,18]],[[127,23,24,43,18]],[[128,23,24,43,18],[[5,[4]]]],[[129,23,24,43,18]],[[23,24],21],[[127,23,24],21],[[128,23,24],21],[[129,23,24],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[134,[36,[135]]],134],[[134,[36,[136]]],134],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[134,137],[[],134],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[],134],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[137,33]],[137],[[137,33]],0,[[]],[[]],0,0,0,[[],8],[[],8],0,[[]],[[]],[21,[[36,[138]]]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[[],5],[[],5],[[],42],[[],[[5,[4]]]],[33,[[5,[4]]]],[138,[[5,[4]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[21,21],[[36,[139]]]],[[80,57,57,57],[[36,[140]]]],[[78,21,21],[[36,[141]]]],[[1,1],[[36,[142]]]],[78,[[36,[143]]]],[[1,1],[[36,[144]]]],[[1,1],[[36,[145]]]],[[18,18],[[36,[146]]]],[[18,18],[[36,[147]]]],[21,[[36,[148]]]],[[1,1],[[36,[149]]]],[[1,1],[[36,[150]]]],[[[38,[55]],18],[[36,[151]]]],[[74,57,57],[[36,[152]]]],[21,[[36,[153]]]],[[18,[29,[18]]],[[36,[154]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[139,[[5,[4]]]],[140,[[5,[4]]]],[141,[[5,[4]]]],[142,[[5,[4]]]],[143,[[5,[4]]]],[144,[[5,[4]]]],[145,[[5,[4]]]],[146,[[5,[4]]]],[147,[[5,[4]]]],[148,[[5,[4]]]],[149,[[5,[4]]]],[150,[[5,[4]]]],[151,[[5,[4]]]],[152,[[5,[4]]]],[153,[[5,[4]]]],[154,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[36,[155]]]],[[21,21],[[36,[156]]]],[57,[[36,[157]]]],[[],[[36,[158]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[155,33],[[5,[4]]]],[156,[[5,[4]]]],[[157,33],[[5,[4]]]],[[158,33],[[5,[4]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[159,1]],[[160,1],[[5,[4]]]],[[161,1]],[160,1],[[160,7],160],[[160,1],160],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[160,9],160],[[160,10,[0,[11,12,13]]]],[[160,[0,[11,12,13]]]],[1,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[159,1]],[[160,1],[[5,[4]]]],[[161,1]],[[],15],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[58,18]],[[159,58,18]],[[160,58,18],[[5,[4]]]],[[161,58,18]],[162],[[],20],[[162,162],21],[[],21],[[160,10],11],[[],22],[160,10],[[23,24]],[[159,23,24]],[[160,23,24],[[5,[4]]]],[[161,23,24]],[[162,25],26],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[159,23,24,1],[[29,[28]]]],[[160,23,24,1],[[29,[28]]]],[[161,23,24,1],[[29,[28]]]],[23,[[29,[58]]]],[[159,23],[[29,[58]]]],[[160,23],[[29,[58]]]],[[161,23],[[29,[58]]]],[160,30],[[],[[29,[1]]]],[159,[[29,[1]]]],[160,[[29,[1]]]],[161,[[29,[1]]]],[160,31],[[23,24,32],[[29,[1]]]],[[159,23,24,32],[[29,[1]]]],[[160,23,24,32],[[29,[1]]]],[[161,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[159,23],[[29,[33]]]],[[160,23],[[29,[33]]]],[[161,23],[[29,[33]]]],[[1,1,1]],[[159,1,1,1]],[[160,1,1,1],[[5,[4]]]],[[161,1,1,1]],[[]],[34,161],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[159,1],21],[[160,1],21],[[161,1],21],[[30,1,1,1],160],[[58,39],162],[1],[[159,1]],[[160,1],[[5,[4]]]],[[161,1]],[[],1],[159,1],[160,1],[161,1],[162,9],[[1,23]],[[159,1,23]],[[160,1,23],[[5,[4]]]],[[161,1,23]],[162,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],1],[159,1],[160,1],[161,1],[[23,24,43,18]],[[159,23,24,43,18]],[[160,23,24,43,18],[[5,[4]]]],[[161,23,24,43,18]],[[23,24],21],[[159,23,24],21],[[160,23,24],21],[[161,23,24],21],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[163,1]],[[164,1],[[5,[4]]]],[[165,1]],[164,1],[[164,7],164],[[164,1],164],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[164,9],164],[[164,10,[0,[11,12,13]]]],[[164,[0,[11,12,13]]]],[1,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[163,1]],[[164,1],[[5,[4]]]],[[165,1]],[[],15],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[1,32,18]],[[163,1,32,18]],[[164,1,32,18],[[5,[4]]]],[[165,1,32,18]],[166],[[],20],[[166,166],21],[[],21],[[164,10],11],[[],22],[164,10],[[23,24]],[[163,23,24]],[[164,23,24],[[5,[4]]]],[[165,23,24]],[[166,25],26],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[23,24,1],[[29,[28]]]],[[163,23,24,1],[[29,[28]]]],[[164,23,24,1],[[29,[28]]]],[[165,23,24,1],[[29,[28]]]],[164,30],[[],[[29,[1]]]],[163,[[29,[1]]]],[164,[[29,[1]]]],[165,[[29,[1]]]],[164,31],[[23,24,32],[[29,[1]]]],[[163,23,24,32],[[29,[1]]]],[[164,23,24,32],[[29,[1]]]],[[165,23,24,32],[[29,[1]]]],[23,[[29,[33]]]],[[163,23],[[29,[33]]]],[[164,23],[[29,[33]]]],[[165,23],[[29,[33]]]],[[1,1,1]],[[163,1,1,1]],[[164,1,1,1],[[5,[4]]]],[[165,1,1,1]],[[]],[34,165],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[163,1],21],[[164,1],21],[[165,1],21],[[30,1,1,1],164],[[1,32,39],166],[1],[[163,1]],[[164,1],[[5,[4]]]],[[165,1]],[[],1],[163,1],[164,1],[165,1],[166,9],[[1,23]],[[163,1,23]],[[164,1,23],[[5,[4]]]],[[165,1,23]],[166,[[5,[[41,[40]],27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[[41,[1]]]],[[163,[41,[1]]]],[[164,[41,[1]]],[[5,[4]]]],[[165,[41,[1]]]],[[],1],[163,1],[164,1],[165,1],[[23,24,43,18]],[[163,23,24,43,18]],[[164,23,24,43,18],[[5,[4]]]],[[165,23,24,43,18]],[[23,24],21],[[163,23,24],21],[[164,23,24],21],[[165,23,24],21],[[]],[[]],[[]],[[]],0,0,0,0,[1],[[167,1]],[[168,1],[[5,[4]]]],[[169,1]],[168,1],[[168,7],168],[[168,1],168],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[168,9],168],[[168,10,[0,[11,12,13]]]],[[168,[0,[11,12,13]]]],[1,167],[1,18],[[167,1],18],[[168,1],18],[[169,1],18],[[],92],[167,92],[168,92],[169,92],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[167,1]],[[168,1],[[5,[4]]]],[[169,1]],[1],[[167,1]],[[168,1],[[5,[4]]]],[[169,1]],[[],15],[[],20],[[168,10],11],[168,10],[[]],[[]],[[]],[168,30],[[],[[29,[1]]]],[167,[[29,[1]]]],[168,[[29,[1]]]],[169,[[29,[1]]]],[168,31],[[93,93,92]],[[167,93,93,92]],[[168,93,93,92],[[5,[4]]]],[[169,93,93,92]],[[]],[34,169],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[167,1],21],[[168,1],21],[[169,1],21],[1],[[167,1]],[[168,1],[[5,[4]]]],[[169,1]],[[],93],[167,93],[168,93],[169,93],[[30,93,93,92],168],[94,[[29,[1]]]],[[167,94],[[29,[1]]]],[[168,94],[[29,[1]]]],[[169,94],[[29,[1]]]],[1],[[167,1]],[[168,1],[[5,[4]]]],[[169,1]],[[],93],[167,93],[168,93],[169,93],[1,[[29,[94]]]],[[167,1],[[29,[94]]]],[[168,1],[[29,[94]]]],[[169,1],[[29,[94]]]],[94,92],[[167,94],92],[[168,94],92],[[169,94],92],[[],18],[167,18],[168,18],[169,18],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[]],[[]],[[]],0,0,0,0,0,[1],[[170,1]],[[171,1],[[5,[4]]]],[[172,1]],[171,1],[[171,7],171],[[],[[117,[93,16]]]],[170,[[117,[93,16]]]],[171,[[117,[93,16]]]],[172,[[117,[93,16]]]],[[171,1],171],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[171,9],171],[[171,10,[0,[11,12,13]]]],[[171,[0,[11,12,13]]]],[1,170],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[170,1]],[[171,1],[[5,[4]]]],[[172,1]],[[],15],[[],20],[[171,10],11],[171,10],[[]],[[]],[[]],[93,[[29,[16]]]],[[170,93],[[29,[16]]]],[[171,93],[[29,[16]]]],[[172,93],[[29,[16]]]],[171,30],[93,[[29,[173]]]],[[170,93],[[29,[173]]]],[[171,93],[[29,[173]]]],[[172,93],[[29,[173]]]],[32,[[29,[93]]]],[[170,32],[[29,[93]]]],[[171,32],[[29,[93]]]],[[172,32],[[29,[93]]]],[[],[[29,[1]]]],[170,[[29,[1]]]],[171,[[29,[1]]]],[172,[[29,[1]]]],[171,31],[[]],[170],[171,[[5,[4]]]],[172],[[]],[34,172],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[1,21],[[170,1],21],[[171,1],21],[[172,1],21],[[],32],[170,32],[171,32],[172,32],[30,171],[1],[[170,1]],[[171,1],[[5,[4]]]],[[172,1]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[93,16,[29,[7]]]],[[170,93,16,[29,[7]]]],[[171,93,16,[29,[7]]],[[5,[4]]]],[[172,93,16,[29,[7]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[59],[59],[59],[[174,23,24],[[41,[1]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[174,1,23,43,18,21,33]],0,[[],14],[[],14],[[],14],[43,43],[28,28],[118,118],[[]],[[]],[[]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[174,1,18,55]],[[43,43],21],[[],21],0,[[174,23,24],175],[[174,23],175],[[43,25],26],[[28,25],26],[[118,25],26],[[]],[[]],[[]],[28,118],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[174,23,24,1],[[29,[28]]]],[[174,23,24,32],28],[[174,23,24,32],[[29,[1]]]],[[174,23],[[29,[33]]]],[[174,23],33],[34,174],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[43,21],[43,21],[[1,23,24,43,18,21,21],28],[[18,176]],[[18,55],18],0,[43,9],[28,9],[118,9],[[174,33]],[[174,1,23]],0,0,0,[43,[[5,[[41,[40]],27]]]],[28,[[5,[[41,[40]],27]]]],[118,[[5,[[41,[40]],27]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],0,[[174,23,24],[[117,[1,18]]]],[[174,1,23,24,43,18]],0,0,[174,177],[[174,23,24],32],[[174,23,24],21],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[59],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],14],[[],14],[178,178],[[]],[[178,178],179],0,0,0,0,0,0,0,0,[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],0,[180],[181],[182],[183],[[178,178],21],[[180,180],21],[[39,39],21],[[181,181],21],[[182,182],21],[[183,183],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[178,25],26],[[180,25],26],[[39,25],26],[[181,25],26],[[182,25],26],[[183,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],0,[28,180],[[1,23,[29,[18]],55],39],[[33,184,185,[117,[18]],[117,[18]],[117,[18]],[117,[18]]],181],[28,182],[[23,24,[117,[1,18]]],183],[[178,178],[[29,[179]]]],[178,9],[180,9],[39,9],[181,9],[182,9],[183,9],0,0,0,0,0,0,[178,[[5,[[41,[40]],27]]]],[180,[[5,[[41,[40]],27]]]],[39,[[5,[[41,[40]],27]]]],[181,[[5,[[41,[40]],27]]]],[182,[[5,[[41,[40]],27]]]],[183,[[5,[[41,[40]],27]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[186,1,1,1]],[[187,1,1,1,1]],[34,186],[34,187],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[187,89],[187,1],[[],113],[186,113],[187,113],[186,1],[187,1],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],167],[186,167],[187,167],[[],170],[186,170],[187,170],[186,1],[187,1],[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[188,1]],[[188,1],21],[[]],[[]],[[188,23],1],[34,188],[34,189],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[[188,1],21],[[189,1],21],[[189,94],[[29,[1]]]],[[188,1,23]],[[189,1],94],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[59],[59],[59],[59],[59],[59],[59],[[33,18,43]],[[33,18,43]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[33,18,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[184,184],[24,24],[190,190],[191,191],[175,175],[185,185],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33],[33,21],[33,41],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[16,[[5,[4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[[],[[5,[16,4]]]],[33,1],[[],185],[[184,184],21],[[24,24],21],[[190,190],21],[[191,191],21],[[],21],[[],21],[[],21],[[],21],[33],[[184,25],26],[[24,25],26],[[190,25],26],[[191,25],26],[[175,25],26],[[185,25],26],[[33,25],26],[33,185],[33,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[],[[5,[27]]]],[[33,32],184],[33,18],[[33,57]],[[33,57]],[24],[33,185],[33,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[[[36,[35]]],[[36,[8,35]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[37,[[37,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[38,[[38,[8]]]],[175,21],[33,21],[[33,7],21],[33,21],[175,21],[[184,24,23],175],[[23,7,1,55],33],[[33,18,43]],[[33,18,43]],[175,184],[184,9],[24,9],[190,9],[191,9],[175,9],[185,9],[33,9],[33,18],0,[33,18],0,[33,190],[[33,57],190],[33,57],[184,[[5,[[41,[40]],27]]]],[24,[[5,[[41,[40]],27]]]],[190,[[5,[[41,[40]],27]]]],[191,[[5,[[41,[40]],27]]]],[175,[[5,[[41,[40]],27]]]],[185,[[5,[[41,[40]],27]]]],[33,[[5,[[41,[40]],27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,18],[33,18],[33,18],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,[33,55],[33,23],[175,24],[33,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Address"],[3,"AdminContractCaller"],[3,"AdminContractTest"],[4,"Error"],[4,"Result"],[3,"AdminContract"],[15,"u64"],[8,"Any"],[15,"usize"],[15,"i32"],[8,"FromBytes"],[8,"PartialEq"],[8,"Debug"],[4,"CLType"],[3,"ContractDef"],[3,"Bytes"],[4,"Action"],[3,"U512"],[3,"AdminVotingCreated"],[3,"EntryPoints"],[15,"bool"],[3,"EventDef"],[6,"VotingId"],[4,"VotingType"],[3,"Formatter"],[6,"Result"],[4,"Error"],[3,"Ballot"],[4,"Option"],[3,"TestEnv"],[3,"ContractPackageHash"],[15,"u32"],[3,"VotingStateMachine"],[15,"str"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"VotingCreatedInfo"],[15,"u8"],[3,"Vec"],[3,"TypeId"],[4,"Choice"],[3,"BidEscrowContractCaller"],[3,"BidEscrowContractTest"],[3,"BidEscrowContract"],[3,"BidEngine"],[6,"JobOfferId"],[6,"BidId"],[6,"JobId"],[3,"JobEngine"],[3,"Bid"],[3,"Job"],[3,"JobOffer"],[3,"Configuration"],[3,"URef"],[6,"BlockTime"],[6,"DocumentHash"],[3,"Private"],[3,"CancelBidRequest"],[4,"BidStatus"],[3,"ShortenedBid"],[3,"SubmitBidRequest"],[3,"PickBidRequest"],[3,"ReclaimBidRequest"],[3,"JobOfferCreated"],[3,"BidSubmitted"],[3,"JobCreated"],[3,"JobAccepted"],[3,"JobSubmitted"],[3,"JobCancelled"],[3,"JobDone"],[3,"JobRejected"],[4,"JobStatus"],[4,"WorkerType"],[3,"ReclaimJobRequest"],[3,"SubmitJobProofRequest"],[4,"AuctionState"],[3,"CancelJobOfferRequest"],[4,"JobOfferStatus"],[3,"PostJobOfferRequest"],[3,"BidStorage"],[3,"JobStorage"],[3,"ConfigurationBuilder"],[3,"ContractCall"],[3,"DaoIdsContractCaller"],[3,"DaoIdsContractTest"],[3,"DaoIdsContract"],[3,"KycNftContractCaller"],[3,"KycNftContractTest"],[3,"KycNftContract"],[6,"TokenUri"],[3,"String"],[6,"TokenId"],[3,"KycVoterContractCaller"],[3,"KycVoterContractTest"],[3,"KycVoterContract"],[3,"KycVotingCreated"],[3,"OnboardingRequestContractCaller"],[3,"OnboardingRequestContractTest"],[3,"OnboardingRequestContract"],[3,"OnboardingVotingCreated"],[3,"Request"],[3,"OnboardingRequest"],[3,"Onboarding"],[3,"CSPRRateProviderContractTest"],[3,"CSPRRateProviderContractCaller"],[3,"CSPRRateProviderContract"],[3,"RepoVoterContractCaller"],[3,"RepoVoterContractTest"],[3,"RepoVoterContract"],[3,"RepoVotingCreated"],[3,"ReputationContractCaller"],[3,"ReputationContractTest"],[3,"ReputationContract"],[3,"AggregatedBalance"],[3,"BTreeMap"],[3,"ShortenedBallot"],[3,"Burn"],[3,"Mint"],[3,"AggregatedStake"],[3,"BalanceAggregates"],[3,"BalanceStorage"],[3,"StakesStorage"],[3,"Iter"],[3,"Iter"],[3,"ReputationVoterContractCaller"],[3,"ReputationVoterContractTest"],[3,"ReputationVoterContract"],[4,"Action"],[3,"ReputationVoting"],[3,"ReputationVotingCreated"],[3,"RuntimeArgs"],[3,"RulesBuilder"],[8,"Validation"],[8,"VotingValidation"],[3,"Rules"],[3,"IsUserKyced"],[3,"CanBeOnboarded"],[3,"CanBidBeCancelled"],[3,"CanBidOnAuctionState"],[3,"CanBidOnOwnJob"],[3,"CanJobOfferBeCancelled"],[3,"CanPickBid"],[3,"CanProgressJobOffer"],[3,"DoesProposedPaymentExceedBudget"],[3,"DoesProposedPaymentMatchTransferred"],[3,"ExistsOngoingVoting"],[3,"HasPermissionsToCancelBid"],[3,"HasPermissionsToCancelJobOffer"],[3,"IsDosFeeEnough"],[3,"IsGracePeriod"],[3,"IsNotVa"],[3,"IsStakeNonZero"],[3,"AfterFormalVoting"],[3,"CanCreateVoting"],[3,"VoteInTime"],[3,"VotingNotCompleted"],[3,"SimpleVoterContractCaller"],[3,"SimpleVoterContractTest"],[3,"SimpleVoterContract"],[3,"SimpleVotingCreated"],[3,"SlashingVoterContractCaller"],[3,"SlashingVoterContractTest"],[3,"SlashingVoterContract"],[3,"SlashingVotingCreated"],[3,"VaNftContractCaller"],[3,"VaNftContractTest"],[3,"VaNftContract"],[3,"VariableRepositoryContractCaller"],[3,"VariableRepositoryContractTest"],[3,"VariableRepositoryContract"],[6,"Record"],[3,"VotingEngine"],[3,"VotingSummary"],[8,"ContractRefs"],[3,"VecMapping"],[4,"Reason"],[4,"Ordering"],[3,"BallotCast"],[3,"VotingEnded"],[3,"BallotCanceled"],[3,"VotingCanceled"],[4,"VotingResult"],[3,"Stats"],[3,"ContractRefsStorage"],[3,"ContractRefsWithKycStorage"],[3,"KycInfo"],[3,"OnboardingInfo"],[4,"VotingState"],[4,"VotingStateInTime"],[8,"AdminContractInterface"],[8,"BidEscrowContractInterface"],[8,"DaoIdsContractInterface"],[8,"KycNftContractInterface"],[8,"KycVoterContractInterface"],[8,"OnboardingRequestContractInterface"],[8,"CSPRRateProviderContractInterface"],[8,"RepoVoterContractInterface"],[8,"ReputationContractInterface"],[8,"ReputationVoterContractInterface"],[8,"SimpleVoterContractInterface"],[8,"SlashingVoterContractInterface"],[8,"VaNftContractInterface"],[8,"VariableRepositoryContractInterface"]]},\
"casper_dao_erc20":{"doc":"","t":[14],"n":["erc_20"],"q":["casper_dao_erc20"],"d":["Generates a  ERC20 binary with all the required no_mangle …"],"i":[0],"f":[0],"p":[]},\
"casper_dao_erc721":{"doc":"","t":[3,3,3,8,3,3,3,3,8,3,3,3,3,8,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,14,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BurnableERC721","ERC721Test","ERC721Token","IERC721Receiver","MetadataERC721","MintableERC721","MockERC721NonReceiver","MockERC721NonReceiverCaller","MockERC721NonReceiverInterface","MockERC721NonReceiverTest","MockERC721NonReceiverTest","MockERC721Receiver","MockERC721ReceiverCaller","MockERC721ReceiverInterface","MockERC721ReceiverTest","MockERC721ReceiverTest","Received","TokenId","TokenUri","address","address","address","advance_block_time_by","advance_block_time_by","advance_block_time_by","approve","approve","approve_owner","as_account","as_account","as_account","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_nth_account","as_nth_account","as_nth_account","assert_event_at","assert_event_at","assert_event_at","assert_last_event","assert_last_event","assert_last_event","at","at","balance_of","balance_of","base_uri","base_uri","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn_unchecked","contract_def","contract_def","convert_from_bytes","convert_to_bytes","data","decrement_balance","decrement_total_supply","emit","entry_points","entry_points","eq","equivalent","erc_721","event","event","event","event_def","events","events_count","events_count","events_count","exists","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","get_approved","get_approved","get_env","get_env","get_env","get_package_hash","get_package_hash","get_package_hash","increment_balance","increment_total_supply","init","init","init","init","init","init","init","init","init","init","install","install","instance","instance","instance","instance","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_approved_for_all","is_approved_for_all","mint","mint","name","name","new","new","new","on_erc_721_received","on_erc_721_received","on_erc_721_received","on_erc_721_received","on_erc_721_received","operator","owner_of","owner_of","owner_of_or_revert","safe_transfer_from","safe_transfer_from","serialized_length","set_approval_for_all","set_approval_for_all","set_owner_of","symbol","symbol","to_bytes","token_id","token_uri","token_uri","total_supply","total_supply","transfer_from","transfer_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Approval","ApprovalForAll","Transfer","approved","approved","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","emit","emit","emit","eq","eq","eq","equivalent","equivalent","equivalent","event_def","event_def","event_def","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","operator","owner","owner","serialized_length","serialized_length","serialized_length","to","to_bytes","to_bytes","to_bytes","token_id","token_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["casper_dao_erc721","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_erc721::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Adds burn functionality to <code>ERC721Token</code>.","A wrapper around <code>ERC721</code> to simplify testing. Implements …","A module implementing ERC721 standard interface.","Verifies the recipient of an ERC-721 token.","A module that stores <code>ERC721Token</code> metadata.","Adds mint functionality to <code>ERC721Token</code>.","A mock contract that does not implement <code>ERC721Receiver</code>.","Provides a reference to a deployed  Mock Erc 721 Non …","Defines the  Mock Erc 721 Non Receiver contract’s public …","A wrapper around <code>MockERC721NonReceiver</code> to simplify testing.","A wrapper around <code>MockERC721NonReceiver</code> to simplify testing.","A mock contract that implements <code>ERC721Receiver</code>.","Provides a reference to a deployed  Mock Erc 721 Receiver .","Defines the  Mock Erc 721 Receiver contract’s public …","A wrapper around <code>MockERC721Receiver</code> to simplify testing. …","A wrapper around <code>MockERC721Receiver</code> to simplify testing. …","Informs a token has been received.","A unique token id.","A distinct Uniform Resource Identifier (URI) for a token.","","","","","","","Sets or revokes the approved address for a token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new caller instance from the given address.","Creates a new caller instance from the given address.","Counts all tokens assigned to an owner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates a  ERC721 binary with all the required no_mangle …","","","","","Event definitions the module emits.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the approved address for a token.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if an address is an authorized operator for another …","","","","","","","","","","","","","","","Finds the owner of a token with the given id.","","","Transfers the ownership of a token from one address to …","","","Enables or disables approval for a third party (“operator…","","","","","","","","","Return the total number of tokens.","","Transfers the ownership of a token from one address to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Informs the approval status has changed.","Informs the approval for all status has changed.","Informs a token has been transferred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,4,1,3,4,6,1,6,1,3,4,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,1,3,4,1,3,4,1,3,4,17,18,6,1,1,21,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,47,1,47,34,35,24,24,24,6,6,24,34,35,24,24,0,1,3,4,24,0,1,3,4,6,24,47,48,6,1,21,17,3,34,18,4,35,24,24,24,6,1,1,3,4,1,3,4,6,6,49,50,1,21,17,3,34,18,4,35,34,35,6,21,34,35,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,21,17,34,18,35,24,47,48,6,1,21,17,3,34,18,4,35,24,6,1,48,1,1,21,1,3,4,51,49,17,3,34,24,6,1,6,6,1,24,6,1,6,1,21,24,24,1,21,6,1,6,1,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,47,48,6,1,21,17,3,34,18,4,35,24,0,0,0,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,46,45,46,44,45,46,44,44,45,46,44,45,44,45,46,44,45,46,44,45,46,44,45,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[[1,5],1],[[3,5],3],[[4,5],4],[[6,[7,[2]],8]],[[1,[7,[2]],8],[[10,[9]]]],[[6,[7,[2]],[7,[2]],8]],[[1,2],1],[[3,2],3],[[4,2],4],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[1,12],1],[[3,12],3],[[4,12],4],[[1,13,[0,[14,15,16]]]],[[3,13,[0,[14,15,16]]]],[[4,13,[0,[14,15,16]]]],[[1,[0,[14,15,16]]]],[[3,[0,[14,15,16]]]],[[4,[0,[14,15,16]]]],[2,17],[2,18],[[6,2],19],[[1,2],19],[1,20],[21,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,8]],[[1,8],[[10,[9]]]],[[6,8]],[[],22],[[],22],[23,[[10,[9]]]],[[],[[10,[23,9]]]],0,[[6,2]],[6],[24],[[],25],[[],25],[[24,24],26],[[],26],0,[[1,13],14],[[3,13],14],[[4,13],14],[[],27],0,[1,13],[3,13],[4,13],[[6,8],26],[[24,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[10,[30]]]],[[6,8],[[7,[2]]]],[[1,8],[[7,[2]]]],[1,31],[3,31],[4,31],[1,32],[3,32],[4,32],[[6,2]],[6],[[]],[[]],[[1,33,33,33],[[10,[9]]]],[[21,33,33,33]],[17],[3,[[10,[9]]]],[34],[18],[4,[[10,[9]]]],[35],[[]],[[]],[36,6],[36,21],[36,34],[36,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[[6,2,2],26],[[1,2,2],26],[[6,2,8]],[[1,2,8],[[10,[9]]]],[1,33],[21,33],[[31,33,33,33],1],[31,3],[31,4],[[2,2,8,[7,[23]]]],[[2,2,8,[7,[23]]]],[[17,2,2,8,[7,[23]]]],[[3,2,2,8,[7,[23]]],[[10,[9]]]],[[34,2,2,8,[7,[23]]]],0,[[6,8],[[7,[2]]]],[[1,8],[[7,[2]]]],[[6,8],2],[[6,2,2,8,[7,[23]]]],[[1,2,2,8,[7,[23]]],[[10,[9]]]],[24,12],[[6,2,26]],[[1,2,26],[[10,[9]]]],[[6,8,[7,[2]]]],[1,33],[21,33],[24,[[10,[[42,[41]],30]]]],0,[[1,8],20],[[21,6,8],20],[6,19],[1,19],[[6,2,2,8]],[[1,2,2,8],[[10,[9]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[10,[9]]]],[23,[[10,[9]]]],[23,[[10,[9]]]],[[],[[10,[23,9]]]],[[],[[10,[23,9]]]],[[],[[10,[23,9]]]],[44],[45],[46],[[44,44],26],[[45,45],26],[[46,46],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[44,28],29],[[45,28],29],[[46,28],29],[[]],[[]],[[]],0,[[],[[10,[30]]]],[[],[[10,[30]]]],[[],[[10,[30]]]],[[]],[[]],[[]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[[[38,[37]]],[[38,[11,37]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[39,[[39,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],[40,[[40,[11]]]],0,0,0,[44,12],[45,12],[46,12],0,[44,[[10,[[42,[41]],30]]]],[45,[[10,[[42,[41]],30]]]],[46,[[10,[[42,[41]],30]]]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],43],[[],43],[[],43],[[]],[[]],[[]]],"p":[[3,"ERC721Test"],[4,"Address"],[3,"MockERC721ReceiverTest"],[3,"MockERC721NonReceiverTest"],[15,"u64"],[3,"ERC721Token"],[4,"Option"],[6,"TokenId"],[4,"Error"],[4,"Result"],[8,"Any"],[15,"usize"],[15,"i32"],[8,"FromBytes"],[8,"PartialEq"],[8,"Debug"],[3,"MockERC721ReceiverCaller"],[3,"MockERC721NonReceiverCaller"],[3,"U512"],[6,"TokenUri"],[3,"MetadataERC721"],[3,"ContractDef"],[3,"Bytes"],[3,"Received"],[3,"EntryPoints"],[15,"bool"],[3,"EventDef"],[3,"Formatter"],[6,"Result"],[4,"Error"],[3,"TestEnv"],[3,"ContractPackageHash"],[3,"String"],[3,"MockERC721Receiver"],[3,"MockERC721NonReceiver"],[15,"str"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u8"],[3,"Vec"],[3,"TypeId"],[3,"Transfer"],[3,"Approval"],[3,"ApprovalForAll"],[3,"BurnableERC721"],[3,"MintableERC721"],[8,"MockERC721ReceiverInterface"],[8,"MockERC721NonReceiverInterface"],[8,"IERC721Receiver"]]},\
"casper_dao_macros":{"doc":"","t":[24,24,24,24,24,24,23],"n":["CLTyped","Event","FromBytes","Instance","Rule","ToBytes","casper_contract_interface"],"q":["casper_dao_macros","","","","","",""],"d":["Derives CLType boilerplate code on top of any struct.","Derive events on top of any struct.","Derives FromBytes boilerplate code on top of any struct.","Derives Instanced boilerplate code on top of any struct.","Derives a validation rule boilerplate code on top of any …","Derives ToBytes boilerplate code on top of any struct.","Generates contracts’ <code>no_mangle</code> functions."],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"p":[]},\
"casper_dao_modules":{"doc":"","t":[3,3,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11],"n":["AccessControl","Owner","Record","Repository","SequenceGenerator","Whitelist","add_to_whitelist","add_to_whitelist","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_ownership","change_ownership","ensure_owner","ensure_whitelisted","ensure_whitelisted","events","from","from","from","from","from","get","get_current_value","get_full_value","get_owner","get_owner","init","init","init","instance","instance","instance","instance","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_whitelisted","is_whitelisted","keys","next_value","owner","owner","remove_from_whitelist","remove_from_whitelist","storage","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_at","vzip","vzip","vzip","vzip","vzip","whitelist","whitelist","AddedToWhitelist","OwnerChanged","RemovedFromWhitelist","ValueUpdated","activation_time","address","address","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","convert_to_bytes","emit","emit","emit","emit","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event_def","event_def","event_def","event_def","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","new_owner","serialized_length","serialized_length","serialized_length","serialized_length","to_bytes","to_bytes","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip"],"q":["casper_dao_modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_modules::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Access control module.","The Owner module.","A data struct stored in the repository.","A module that stores the DAO configuration.","A module that stores a single value in the storage that …","The Whitelist module.","Adds a new address to the whitelist.","Add new <code>address</code> to the whitelist.","","","","","","","","","","","","","","","","","","","","","Changes ownership of the contract. Transfer the ownership …","Set the owner to the new address.","Verify if the contract caller is the owner. Revert …","Verifies whether the current caller address is added to …","Assert the caller is on the list. Revert otherwise.","Events emitted by the modules.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the address of the current owner.","","Module constructor.","Initialize the module.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Checks whether the given address is added to the whitelist.","","","","","","Removes the <code>address</code> from the whitelist.","Remove an <code>address</code> from the whitelist.","","","","","","","","","","","","","","","","","","","","","","","","","Informs new address has been added to the whitelist.","Informs the owner change.","Informs new address has been removed from the whitelist.","Informs the repository value has been changed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,3,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,1,5,5,1,3,0,10,1,5,6,3,6,10,6,1,5,1,5,6,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,1,3,6,10,1,5,1,3,6,10,1,5,6,3,10,1,5,6,3,10,1,5,6,3,6,10,1,5,6,3,1,3,0,0,0,0,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,23,22,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,23,22,23,24,25],"f":[0,0,0,0,0,0,[[1,2]],[[3,2]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2]],[[5,2]],[5],[1],[3],0,[[]],[[]],[[]],[[]],[[]],[[6,7],[[9,[8]]]],[10],[[6,7],[[9,[11]]]],[1,[[9,[2]]]],[5,[[9,[2]]]],[[1,2]],[[5,2]],[6],[12,10],[12,1],[12,5],[12,6],[12,3],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[[1,2],17],[[3,2],17],0,[10],0,0,[[1,2]],[[3,2]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[6,7,8,[9,[20]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[18,[21]]]],[8,[[18,[21]]]],[8,[[18,[21]]]],[8,[[18,[21]]]],[[],[[18,[8,21]]]],[[],[[18,[8,21]]]],[[],[[18,[8,21]]]],[[],[[18,[8,21]]]],[22],[23],[24],[25],[[22,22],17],[[23,23],17],[[24,24],17],[[25,25],17],[[],17],[[],17],[[],17],[[],17],[[],26],[[],26],[[],26],[[],26],[[22,27],28],[[23,27],28],[[24,27],28],[[25,27],28],[[]],[[]],[[]],[[]],[[],[[18,[29]]]],[[],[[18,[29]]]],[[],[[18,[29]]]],[[],[[18,[29]]]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[[[14,[13]]],[[14,[4,13]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[15,[[15,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],[16,[[16,[4]]]],0,0,[22,30],[23,30],[24,30],[25,30],[22,[[18,[[32,[31]],29]]]],[23,[[18,[[32,[31]],29]]]],[24,[[18,[[32,[31]],29]]]],[25,[[18,[[32,[31]],29]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]]],"p":[[3,"AccessControl"],[4,"Address"],[3,"Whitelist"],[8,"Any"],[3,"Owner"],[3,"Repository"],[3,"String"],[3,"Bytes"],[4,"Option"],[3,"SequenceGenerator"],[6,"Record"],[15,"str"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"bool"],[4,"Result"],[3,"TypeId"],[15,"u64"],[4,"Error"],[3,"OwnerChanged"],[3,"ValueUpdated"],[3,"AddedToWhitelist"],[3,"RemovedFromWhitelist"],[3,"EventDef"],[3,"Formatter"],[6,"Result"],[4,"Error"],[15,"usize"],[15,"u8"],[3,"Vec"]]},\
"casper_dao_utils":{"doc":"","t":[13,13,13,13,4,13,13,13,13,13,13,13,13,6,2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,6,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,8,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,8,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,10,10,11,11,11,10,11,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,0,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,0,11,0,11,11,11,12,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,8,10,10,5,5,5,5,3,8,3,3,8,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["Account","AccountNotFound","ActivationTimeInPast","AddKeyFailure","Address","ApprovalToCurrentOwner","ApproveCallerIsNotOwnerNorApprovedForAll","ApproveToCaller","ArithmeticOverflow","AuctionNotRunning","BallotDoesNotExist","BidNotFound","BidStakeDoesntExists","BlockTime","BytesConversion","BytesConversionError","BytesDeserializationError","BytesRepr","CLValue","CLValueError","CallerIsNotOwnerNorApproved","CannotAcceptJob","CannotBidOnOwnJob","CannotCancelBidBeforeAcceptanceTimeout","CannotCancelBidOnCompletedJobOffer","CannotCancelJob","CannotCancelNotOwnedBid","CannotCancelNotOwnedJobOffer","CannotDepositZeroAmount","CannotPostJobForSelf","CannotStakeTwice","CannotSubmitJob","CannotSubmitJobProof","CannotVoteOnOwnJob","CannotVoteTwice","Contract","ContractCall","ContractToCallNotSet","DeploymentAuthorizationFailure","DictionaryItemKeyExceedsLength","DictionaryStorageError","DocumentHash","DosFeeTooLow","Error","ExecutionError","ExpectedFormalToBeOn","ExpectedInformal","ExpectedReturnValue","FiatRateNotSet","FinishingCompletedVotingNotAllowed","ForgedReference","FormalVotingNotCompleted","FormalVotingTimeNotReached","FunctionNotFound","GasLimit","GracePeriodNotStarted","HostBufferEmpty","IncompatibleProtocolMajorVersion","IndexedMapping","InformalVotingNotStarted","InformalVotingTimeNotReached","Instanced","InsufficientAllowance","InsufficientBalance","InternalAuctionTimeExpired","Interpreter","InvalidAccess","InvalidAddress","InvalidContext","InvalidContext","InvalidContract","InvalidContractPackage","InvalidContractVersion","InvalidContractWasm","InvalidTokenOwner","Iter","JobAlreadySubmitted","JobCannotBeYetCanceled","JobNotFound","JobOfferCannotBeYetCanceled","JobOfferNotFound","JobPosterNotKycd","KeyIsNotAURef","KeyNotFound","KeyValueStorageError","KycAlreadyInProgress","List","LockedContract","Mapping","MappingIndexDoesNotExist","MissingArgument","MissingRuntimeStack","MissingSystemContractHash","MissingSystemContractRegistry","NamedKeyNotFound","NoActiveContractVersions","NoSuchMethod","NoSuchMethod","NotAnOwner","NotAuthorizedToSubmitResult","NotEnoughReputation","NotKyced","NotOnboarded","NotOnboardedWorkerCannotStakeReputation","NotWhitelisted","OnboardedWorkerCannotBid","OnboardingAlreadyInProgress","OnlyJobPosterCanModifyJobOffer","OnlyJobPosterCanPickABid","OnlyOnboardedWorkerCanBid","OnlyReputationTokenContractCanCancel","OnlyWorkerCanSubmitProof","OrderedCollection","OwnerIsNotInitialized","ParityWasm","PaymentExceedsMaxBudget","PublicAuctionNotStarted","PublicAuctionTimeExpired","PurseBalanceMismatch","PurseError","RemoveKeyFailure","RepositoryError","Resolver","Ret","Revert","RuntimeStackOverflow","Set","SetThresholdFailure","Storage","StorageError","SubjectOfSlashing","SystemContract","TestContract","TestEnv","TokenAlreadyExists","TokenDoesNotExist","TotalSupplyOverflow","TransferError","TransferFromIncorrectOwner","TransferToNonERC721ReceiverImplementer","TypeMismatch","URefNotFound","UnexpectedKycError","UnexpectedOnboardingError","UnexpectedReturnValue","UnexpectedStoredValueVariant","Unknown","UnsupportedWasmStart","UpdateKeyFailure","UserAlreadyOwnsToken","UserKycedAlready","VMInternalError","VaOnboardedAlready","ValueNotAvailable","ValueTooLarge","Variable","VariableValueNotSet","VecMapping","VoteOnCompletedVotingNotAllowed","VoterDoesNotExist","VotingAddressNotFound","VotingAlreadyCanceled","VotingAlreadyFinished","VotingDoesNotExist","VotingDuringTimeBetweenVotingsNotAllowed","VotingIdNotFound","VotingNotCompleted","VotingNotStarted","VotingStakeDoesntExists","VotingWithGivenTypeNotInProgress","WasmOptimizer","WasmPreprocessing","WorkerNotKycd","ZeroStake","__clone_box","__clone_box","__clone_box","__clone_box","add","add","add","add","add","address","address","address","advance_block_time_by","advance_block_time_by","as_account","as_account","as_account_hash","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_contract_package_hash","as_nth_account","assert_event_at","assert_last_event","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","casper_contract","casper_dao_macros","casper_env","cl_type","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consts","contains","conversions","convert_from_bytes","convert_from_bytes","convert_to_bytes","convert_to_bytes","count","cspr","default","definitions","delete","deploy_wasm_file","entry_point","entry_point","eq","eq","eq","equivalent","equivalent","equivalent","event","events_count","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","get","get","get","get","get","get_account","get_address_cspr_balance","get_all","get_block_time","get_contract_package_hash","get_dict_value","get_env","get_or_none","get_or_none","get_or_revert","get_or_revert","get_or_revert","get_package_hash","get_value","hash","index_of","instance","instance","instance","instance","instance","instance","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_contract","iter","len","length","math","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","new","new","new","next","next_back","nth","partial_cmp","path","path","path","provide","remove","replace","runtime_args","runtime_args","serialized_length","serialized_length","set","set","set","size","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mismatch","unset","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","actual","expected","name","required","call_contract","caller","contract_main_purse","emit","get_block_time","get_key","install_contract","revert","self_address","set_key","to_dictionary_key","ARG_ADDRESS","ARG_AMOUNT","ARG_KEY","ARG_OWNER","ARG_RECIPIENT","ARG_TO","ARG_TOKEN_ID","ARG_VALUE","BID_ESCROW_FORMAL_QUORUM_RATIO","BID_ESCROW_FORMAL_VOTING_TIME","BID_ESCROW_INFORMAL_QUORUM_RATIO","BID_ESCROW_INFORMAL_VOTING_TIME","BID_ESCROW_PAYMENT_RATIO","BID_ESCROW_WALLET_ADDRESS","CONTRACT_MAIN_PURSE","DEFAULT_POLICING_RATE","DEFAULT_REPUTATION_SLASH","DISTRIBUTE_PAYMENT_TO_NON_VOTERS","EP_ADD_TO_WHITELIST","EP_BURN","EP_CHANGE_OWNERSHIP","EP_GET","EP_INIT","EP_MINT","EP_REMOVE_FROM_WHITELIST","EP_SET_OR_UPDATE","EP_STAKE","EP_TRANSFER_FROM","EP_UNSTAKE","FIAT_CONVERSION_RATE_ADDRESS","FORMAL_QUORUM_RATIO","FORMAL_VOTING_TIME","FORUM_KYC_REQUIRED","INFORMAL_QUORUM_RATIO","INFORMAL_STAKE_REPUTATION","INFORMAL_VOTING_TIME","INTERNAL_AUCTION_TIME","LENGTH_SUFFIX","NAME_EVENTS","POST_JOB_DOS_FEE","PUBLIC_AUCTION_TIME","REPUTATION_CONVERSION_RATE","TIME_BETWEEN_INFORMAL_AND_FORMAL_VOTING","VA_BID_ACCEPTANCE_TIMEOUT","VA_CAN_BID_ON_PUBLIC_AUCTION","VOTING_CLEARNESS_DELTA","VOTING_IDS_ADDRESS","VOTING_START_AFTER_JOB_WORKER_SUBMISSION","BytesConversion","convert_from_bytes","convert_to_bytes","deposit","main_purse_balance","transfer_p2p","withdraw","ContractDef","ContractDefinition","ElemDef","EventDef","EventDefinition","MethodDef","__clone_box","__clone_box","__clone_box","__clone_box","add_arg","add_event","add_event","add_method","args","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contract_def","entry_points","event_def","events","fields","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_mutable","mutable_methods","name","name","name","name","new","new","new","new","return_ty","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_event","with_field","per_mil_of","per_mil_of_as_u32","to_per_mils"],"q":["casper_dao_utilscasper_dao_utils::Address","","casper_dao_utils::Error","casper_dao_utils::ExecutionError","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_utils::casper_env","","","","","","","","","","","casper_dao_utils::consts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_utils::conversions","","","casper_dao_utils::cspr","","","","casper_dao_utils::definitions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","casper_dao_utils::math","",""],"d":["Represents an account hash.","Unable to find an account.","","Error adding an associated key.","An enum representing an <code>AccountHash</code> or a …","","","","","","","","","A value that represents the block time.","","","","Failed to (de)serialize bytes.","Error converting a CLValue.","","","","","","","","","","","","","","","","","Represents a contract package hash.","A serializable data structure that represent a contract …","","Weight of all used associated keys does not meet account’…","Error writing a dictionary item key which exceeded maximum …","","The hash of a document sent to the system.","","All possible errors that can be raised by the utils crate.","Possible execution errors.","","","Host buffer expected a value to be present.","","","Forged reference error.","","","Unable to find a function.","Execution exceeded the gas limit.","","Unable to access host buffer.","Unable to execute a deploy with invalid major protocol …","Data structure for storing index-value pairs.","","","A trait that should be implemented by each module to …","","","","WASM interpreter error.","Invalid access.","","","Error calling a host function in a wrong context.","Unable to find a contract by a specified hash address.","Unable to find a contract package by a specified hash …","Invalid contract version supplied.","Unable to find the WASM bytes specified by a hash address.","","<code>OrderedCollection</code> iterator.","","","","","","","Unable to convert a <code>Key</code> into an <code>URef</code>.","Unable to find a key.","","","A collection acts like a list.","Error upgrading a locked contract package.","Data structure for storing key-value pairs.","","Error calling a smart contract with a missing argument.","The runtime stack is <code>None</code>.","Missing system contract hash.","Missing system contract registry.","Unable to find named key.","Contract package has no active contract versions.","","Contract does not have specified entry point.","","","","","","","","","","","","","","","Data structure for storing indexed values.","","Parity WASM error.","","","","","","Error removing an associated key.","","Error using WASM host function resolver.","A stored smart contract incorrectly called a ret function.","Reverts execution with a provided status","An attempt to push to the runtime stack which is already …","A collection acts like a set.","Error setting threshold on associated key.","Storage error.","","","Error executing system contract.","An interface of a contract to be tested against <code>TestEnv</code>.","CasperVM based testing environment.","","","","","","","Type mismatch error.","Unable to find a <code>URef</code>.","","","Host buffer was not expected to contain a value.","Unexpected variant of a stored value.","","WASM bytes contains an unsupported “start” section.","Error updating an associated key.","","","","","","An attempt to write a value to global state where its …","Data structure for storing a single value.","","Data structure for storing key-value pairs.","","","","","","","","","","","","","Error optimizing WASM.","Error processing WASM bytes.","","","","","","","","","","","Sets <code>value</code> under the next index of <code>key</code> to the storage. It …","","Get the contract call’s address.","","","Increases the current value of block_time","","Set the account context.","Returns the inner account hash if <code>self</code> is the <code>Account</code> …","","","","","","","","","","","","","","","","","","","","","","","Returns the inner contract hash if <code>self</code> is the <code>Contract</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Calls the contract.","Call contract and return a value.","","","Functions to interact with the host environment.","","","","","","","","","","","Useful constants for common strings.","Checks if the <code>value</code> is stored in the collection.","Types conversion.","","","","","","Functions for interacting with purses.","","Data structures describing contracts and events metadata.","Tries to delete the given <code>item</code>. If succeeds, returns true, …","Deploy new wasm file.","Get the contract call’s entry point.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Gets the value under the given index. Returns <code>None</code> if the …","Read <code>key</code> from the storage or return None","Reads <code>index</code> from the storage or return None","Reads <code>key</code> at the given position from the storage or return …","Read from the storage or return none","Get account by index.","","Aggregates all the values stored under (<code>key</code>, n).","","Read <code>ContractPackageHash</code> from the active user’s named …","Read <code>casper_types::CLValue</code> from the contract’s …","","Read <code>key</code> from the storage or return none.","Reads <code>key</code> at the given position from the storage or return …","Read <code>key</code> from the storage or revert if the key stores no …","Read <code>key</code> at the given position from the storage or revert …","Read from the storage or revert","","Read <code>casper_types::CLValue</code> from the contract’s named …","","Returns the index of the <code>value</code> or None if does not exists.","Instantiates the module.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator.","Number of items stored under <code>key</code>.","","Calculation utility functions.","","","","","Creates a new OrderedCollection instance.","Create new Mapping instance.","Creates new IndexedMapping instance.","Creates new VecMapping instance.","Create a new Variable instance.","Create new TestEnv.","","","","","Return the named key path to the dictionarie’s URef.","Returns the named key path to the dictionary’s URef.","Return the named key path to the variable’s URef.","","Replaces the ’value<code>with</code>None`. Returns a tuple (success, …","Replaces the <code>value</code> under (<code>key</code>, <code>at</code>) key.","Get a reference to the contract call’s runtime args.","","","","Set <code>value</code> under <code>key</code> to the storage. It overrides by …","Set <code>value</code> under <code>index</code> to the storage. It overrides by …","Store <code>value</code> to the storage.","Returns the collection size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns new type mismatch error.","Set <code>None</code> under <code>index</code> to the storage. It overrides by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actual major version supplied.","Expected major version.","Name of the required argument.","Required access rights of the operation.","Calls a contract method by Address","Gets the immediate session caller of the current execution.","Returns an <code>URef</code> of the contracts’ main purse.","Record event to the contract’s storage.","Returns the current <code>BlockTime</code>.","Read value from the storage.","Creates a new contract and initializes it by calling a …","Stops execution of a contract and reverts execution …","Gets the address of the currently run contract","Save value to the storage.","Convert any key to hash.","The name of <code>address</code> entry point argument.","The name of <code>amount</code> entry point argument.","The name of <code>key</code> entry point argument.","The name of <code>owner</code> entry point argument.","The name of <code>recipient</code> entry point argument.","The name of <code>to</code> entry point argument.","The name of <code>token_id</code> entry point argument.","The name of <code>value</code> entry point argument.","How many <code>VA’s</code> are needed for an formal voting quorum.","Time for the formal part of the <code>Bid Escrow</code> voting.","How many <code>VA’s</code> are needed for an informal voting quorum.","Time for the informal part of the <code>Bid Escrow</code> voting.","How much CSPR is sent to GovernanceWallet after the Job is …","An address of a multisig wallet (GovernanceWallet) of the …","","Defines how many <code>Reputation tokens</code> are given to the <code>VA’s</code> …","How much reputation of an Internal Worker is slashed after …","Determines if the Payment for the Job should be …","The name of <code>add_to_whitelist</code> entry point.","The name of <code>burn</code> entry point.","The name of <code>change_ownership</code> entry point.","The name of <code>get</code> entry point.","The name of <code>init</code> entry point.","The name of <code>mint</code> entry point.","The name of <code>remove_from_whitelist</code> entry point.","The name of <code>set_or_update</code> entry point.","The name of <code>stake</code> entry point.","The name of <code>transfer_from</code> entry point.","The name of <code>unstake</code> entry point.","An address of a contract that will return the conversion …","How many <code>VA’s</code> are needed for an formal voting quorum.","Time for the formal part of other votings","Defines if KYC is required to post on Forum.","How many <code>VA’s</code> are needed for an informal voting quorum.","Tells if the Informal Voting should stake the reputation …","Time for the informal part of other votings","The time of the Internal Auction.","The key the collection length is stored under.","The key the contracts’ events are stored under.","A DOS fee that the JobPoster needs to attach to the Post …","The time of the External Auction.","Defines how much <code>Reputation</code> is minted for each unit of …","Time between Informal and Formal Votings.","How much time the bid wait for the acceptance. After this …","Whether or not VA’s can take part in the <code>Public Auction</code> …","If the difference between 50/50 and result of the Informal …","An address of a contract that generates a next voting id.","Time between the worker job submission and the internal …","Error-safe conversion from/to bytes.","Converts <code>Bytes</code> to a struct or returns an <code>Error</code>.","Converts the struct to <code>Bytes</code> or returns an <code>Error</code>.","Transfers all the funds from the given <code>cargo_purse</code> to the …","Gets the balance of the currently executing contract main …","Transfers all the funds from the given <code>from</code> purse to the <code>to</code>…","Withdraws funds from the currently executing contract main …","Represents a contract definition.","Smart contract metadata. Should be implemented by every …","Represents a single event field.","Represents an event definition.","Event metadata. Should be implemented by every event.","Represents contract entry point definition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two number and return per mile of their product.","Multiplies two number and return per mile of their product …","Returns the number divided by 1000."],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[[8,[[0,[2,3,4,5,6,7]]]],[0,[2,3,4,5,6,7]]]],[[[8,[[0,[2,3,4,5,6,7]]]],[0,[2,3,4,5,6,7]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]],[0,[2,3,4]]]],[[],11],[12,11],0,[13],[[14,15]],[11],[[14,11]],[11,[[17,[16]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[11,[[17,[19]]]],[20],[[21,[0,[3,5,6]]]],[[[0,[3,5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[14,19,22,23,24],[[26,[[17,[3]],25]]]],0,0,0,[[],27],[11,11],[12,12],[14,14],[28,28],[[]],[[]],[[]],[[]],[[11,11],29],0,[[[30,[[0,[2,3,4,7]]]]],24],0,[31,[[26,[25]]]],[31,[[26,[25]]]],[[],[[26,[31,25]]]],[[],[[26,[31,25]]]],[32,20],0,[[],14],0,[[[8,[[0,[2,3,4,5,6,7]]]],[0,[2,3,4,5,6,7]]],24],[[14,22,23],[[26,[25]]]],[12,33],0,[[11,11],24],[[12,12],24],[[25,25],24],[[],24],[[],24],[[],24],[21,3],[[],21],[[11,34],35],[[12,34],35],[[25,34],35],[[28,34],[[26,[36]]]],[[28,34],[[26,[36]]]],[[]],[[]],[[]],[22,[[37,[[0,[2,4]],[0,[2,3,4]]]]]],[[]],[[]],[22,[[38,[[0,[3,2,4]]]]]],[[]],[[]],[19,11],[16,11],[[]],[[]],[39,25],[[]],[40,28],[41,28],[42,28],[43,28],[44,28],[45,28],[46,28],[47,28],[48,28],[49,28],[50,28],[51,28],[[]],[52,28],[53,28],[[],[[26,[46]]]],[[],[[26,[46]]]],[[[8,[[0,[2,3,4,5,6,7]]]],54],[[17,[[0,[2,3,4,5,6,7]]]]]],[[[37,[[0,[2,4]],[0,[2,3,4]]]]],[[17,[[0,[2,3,4]]]]]],[[[30,[[0,[2,3,4,7]]]],54],[[17,[[0,[2,3,4,7]]]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]],54],[[17,[[0,[2,3,4]]]]]],[[[38,[[0,[3,2,4]]]]],[[17,[[0,[3,2,4]]]]]],[[14,20],11],[[14,11],55],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]]],[[56,[[0,[2,3,4]]]]]],[14,13],[[14,22],19],[[14,19,22,[0,[2,4]]],[[0,[3,4,57]]]],[[],14],[[[37,[[0,[2,4]],[0,[2,3,4]]]]],[[17,[[0,[2,3,4]]]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]],54],[[17,[[0,[2,3,4]]]]]],[[[37,[[0,[2,4]],[0,[2,3,4]]]]],[[0,[2,3,4]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]],54],[[0,[2,3,4]]]],[[[38,[[0,[3,2,4]]]]],[[0,[3,2,4]]]],[[],19],[[14,19,22],[[0,[3,4]]]],[11],[[[30,[[0,[2,3,4,7]]]]],[[17,[54]]]],[22],[22,[[8,[[0,[3,2,4]]]]]],[22,[[37,[[0,[2,4]],[0,[2,3,4]]]]]],[22,[[30,[[0,[3,2,4]]]]]],[22,[[10,[[0,[2,4]],[0,[3,2,4]]]]]],[22,[[38,[[0,[3,2,4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[[]],[11,24],[[[8,[[0,[2,3,4,5,6,7]]]]],[[32,[[0,[2,3,4,5,6,7]]]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]]],54],0,0,[[]],[[]],[[]],[[]],[22,[[8,[[0,[2,3,4,5,6,7]]]]]],[33,[[37,[[0,[2,4]],[0,[2,3,4]]]]]],[33,[[30,[[0,[2,3,4,7]]]]]],[33,[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]]]],[33,[[38,[[0,[3,2,4]]]]]],[[],14],[32,17],[32,17],[[32,20],17],[[11,11],[[17,[29]]]],[[[37,[[0,[2,4]],[0,[2,3,4]]]]],22],[[[30,[[0,[2,3,4,7]]]]],22],[[[38,[[0,[3,2,4]]]]],22],[62],[[[30,[[0,[2,3,4,7]]]],[0,[2,3,4,7]]]],[[[10,[[0,[4,3,2,7,9]],[0,[2,3,4]]]],[0,[4,3,2,7,9]],54,[0,[2,3,4]]],[[26,[25]]]],[12,23],0,[11,20],[12,20],[[[37,[[0,[2,4]],[0,[2,3,4]]]],[0,[2,3,4]]]],[[[30,[[0,[2,3,4,7]]]],54,[0,[2,3,4,7]]]],[[[38,[[0,[3,2,4]]]],[0,[3,2,4]]]],[8,54],[32],[11,[[26,[[56,[63]],46]]]],[12,[[26,[[56,[63]],46]]]],[[]],[[]],[[]],[[]],[[],33],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[27,27],28],[[[30,[[0,[2,3,4,7]]]],54]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,22,23],[[0,[4,3]]]],[[],11],[[],65],[2],[[],66],[22,[[17,[[0,[3,4]]]]]],[[22,67,68]],[[[70,[69]]],71],[[],11],[[22,[0,[2,4]]]],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,[[26,[25]]]],[[],[[26,[31,25]]]],[65,55],[[],55],[[65,65,55]],[[11,55]],0,0,0,0,0,0,[1],[1],[1],[1],[[72,73]],[[74,22]],[[72,75]],[[74,72]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[72,72],[75,75],[73,73],[[]],[[]],[[]],[[]],[[],74],0,[[],75],0,0,[[74,34],35],[[72,34],35],[[75,34],35],[[73,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[[[59,[58]]],[[59,[18,58]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[60,[[60,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],[61,[[61,[18]]]],0,[74,[[56,[72]]]],0,0,0,0,[22,74],[[22,24],72],[22,75],[22,73],0,[74,26],[72,26],[75,26],[73,26],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],64],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[]],[[74,22],74],[[75,73],75],[[[70,[55]],[70,[55]]],[[26,[55,25]]]],[[[70,[55]],[70,[55]]],[[26,[54,25]]]],[[[70,[55]]],55]],"p":[[3,"Private"],[8,"ToBytes"],[8,"FromBytes"],[8,"CLTyped"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[3,"OrderedCollection"],[8,"Clone"],[3,"VecMapping"],[4,"Address"],[3,"ContractCall"],[15,"u64"],[3,"TestEnv"],[3,"Duration"],[3,"AccountHash"],[4,"Option"],[8,"Any"],[3,"ContractPackageHash"],[15,"usize"],[15,"i32"],[15,"str"],[3,"RuntimeArgs"],[15,"bool"],[4,"Error"],[4,"Result"],[4,"CLType"],[4,"ExecutionError"],[4,"Ordering"],[3,"IndexedMapping"],[3,"Bytes"],[3,"Iter"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Mapping"],[3,"Variable"],[15,"u16"],[4,"ResolverError"],[4,"RemoveKeyFailure"],[4,"PreprocessingError"],[4,"Error"],[4,"Error"],[4,"UpdateKeyFailure"],[4,"Error"],[4,"AddKeyFailure"],[4,"Error"],[4,"Error"],[3,"RuntimeStackOverflow"],[4,"Error"],[4,"CLValueError"],[4,"SetThresholdFailure"],[15,"u32"],[3,"U512"],[3,"Vec"],[8,"Default"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Demand"],[15,"u8"],[3,"TypeId"],[3,"URef"],[6,"BlockTime"],[3,"EntryPoints"],[8,"FnOnce"],[4,"ApiError"],[8,"Into"],[15,"never"],[3,"MethodDef"],[3,"ElemDef"],[3,"ContractDef"],[3,"EventDef"],[8,"Set"],[8,"List"],[8,"TestContract"],[8,"Instanced"],[13,"Account"],[13,"Contract"],[13,"NoSuchMethod"],[13,"Interpreter"],[13,"Storage"],[13,"BytesRepr"],[13,"NamedKeyNotFound"],[13,"KeyNotFound"],[13,"AccountNotFound"],[13,"TypeMismatch"],[13,"ForgedReference"],[13,"URefNotFound"],[13,"FunctionNotFound"],[13,"ParityWasm"],[13,"Ret"],[13,"Resolver"],[13,"Revert"],[13,"AddKeyFailure"],[13,"RemoveKeyFailure"],[13,"UpdateKeyFailure"],[13,"SetThresholdFailure"],[13,"SystemContract"],[13,"CLValue"],[13,"NoActiveContractVersions"],[13,"InvalidContractVersion"],[13,"NoSuchMethod"],[13,"WasmPreprocessing"],[13,"KeyIsNotAURef"],[13,"LockedContract"],[13,"InvalidContractPackage"],[13,"InvalidContract"],[13,"InvalidContractWasm"],[13,"MissingSystemContractHash"],[13,"IncompatibleProtocolMajorVersion"],[13,"MissingArgument"],[13,"InvalidAccess"],[8,"BytesConversion"],[8,"ContractDefinition"],[8,"EventDefinition"]]},\
"dao_contracts_schemas":{"doc":"","t":[5,5],"n":["all_contracts","print_all_contracts"],"q":["dao_contracts_schemas",""],"d":["",""],"i":[0,0],"f":[[[],[[2,[1]]]],[[]]],"p":[[3,"ContractDef"],[3,"Vec"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
