window.SIDEBAR_ITEMS = {"macro":[["erc_721","Generates a  ERC721 binary with all the required no_mangle functions."]],"mod":[["events","Event definitions the module emits."]],"struct":[["BurnableERC721","Adds burn functionality to [`ERC721Token`]."],["ERC721Test","A wrapper around [`ERC721`] to simplify testing. Implements [`ERC721Interface`] and `TestContract`."],["ERC721Token","A module implementing ERC721 standard interface."],["MetadataERC721","A module that stores [`ERC721Token`] metadata."],["MintableERC721","Adds mint functionality to [`ERC721Token`]."],["MockERC721NonReceiver","A mock contract that does not implement `ERC721Receiver`."],["MockERC721NonReceiverCaller","Provides a reference to a deployed  Mock Erc 721 Non Receiver ."],["MockERC721NonReceiverTest","A wrapper around [`MockERC721NonReceiver`] to simplify testing. Implements [`MockERC721NonReceiverInterface`] and `TestContract`."],["MockERC721Receiver","A mock contract that implements `ERC721Receiver`."],["MockERC721ReceiverCaller","Provides a reference to a deployed  Mock Erc 721 Receiver ."],["MockERC721ReceiverTest","A wrapper around [`MockERC721Receiver`] to simplify testing. Implements [`MockERC721ReceiverInterface`] and `TestContract`."],["Received","Informs a token has been received."]],"trait":[["IERC721Receiver","Verifies the recipient of an ERC-721 token."],["MockERC721NonReceiverInterface","Defines the  Mock Erc 721 Non Receiver contract’s public interface."],["MockERC721ReceiverInterface","Defines the  Mock Erc 721 Receiver contract’s public interface."]],"type":[["TokenId","A unique token id."],["TokenUri","A distinct Uniform Resource Identifier (URI) for a token."]]};